<?xml version="1.0"?>
<doc>
    <assembly>
        <name>Shim</name>
    </assembly>
    <members>
        <member name="T:System.ApplicationException">
            <summary>The exception that is thrown when a non-fatal application error occurs.</summary><filterpriority>2</filterpriority>
        </member>
        <member name="M:System.ApplicationException.#ctor">
            <summary>Initializes a new instance of the <see cref="T:System.ApplicationException"/> class.</summary>
        </member>
        <member name="M:System.ApplicationException.#ctor(System.String)">
            <summary>Initializes a new instance of the <see cref="T:System.ApplicationException"/> class with a specified error message.</summary><param name="message">A message that describes the error. </param>
        </member>
        <member name="T:System.Collections.Concurrent.ConcurrentBag`1">
            <summary>Represents a thread-safe, unordered collection of objects.</summary><typeparam name="T">The type of the elements to be stored in the collection.</typeparam>
        </member>
        <member name="M:System.Collections.Concurrent.ConcurrentBag`1.Remove(`0)">
            <remarks>
            Class currently inherits <see cref="T:System.Collections.Generic.List`1"/> for convenience, and overrides this methd for safety. 
            Ideally <see cref="T:System.Collections.Concurrent.ConcurrentBag`1"/> should be implemented independently of <see cref="T:System.Collections.Generic.List`1"/>.
            </remarks>
        </member>
        <member name="M:System.Collections.Concurrent.ConcurrentBag`1.RemoveAt(System.Int32)">
            <remarks>
            Class currently inherits <see cref="T:System.Collections.Generic.List`1"/> for convenience, and overrides this methd for safety. 
            Ideally <see cref="T:System.Collections.Concurrent.ConcurrentBag`1"/> should be implemented independently of <see cref="T:System.Collections.Generic.List`1"/>.
            </remarks>
        </member>
        <member name="M:System.Collections.Concurrent.ConcurrentBag`1.RemoveAll(System.Predicate{`0})">
            <remarks>
            Class currently inherits <see cref="T:System.Collections.Generic.List`1"/> for convenience, and overrides this methd for safety. 
            Ideally <see cref="T:System.Collections.Concurrent.ConcurrentBag`1"/> should be implemented independently of <see cref="T:System.Collections.Generic.List`1"/>.
            </remarks>
        </member>
        <member name="M:System.Collections.Concurrent.ConcurrentBag`1.RemoveRange(System.Int32,System.Int32)">
            <remarks>
            Class currently inherits <see cref="T:System.Collections.Generic.List`1"/> for convenience, and overrides this methd for safety. 
            Ideally <see cref="T:System.Collections.Concurrent.ConcurrentBag`1"/> should be implemented independently of <see cref="T:System.Collections.Generic.List`1"/>.
            </remarks>
        </member>
        <member name="M:System.Collections.Concurrent.ConcurrentBag`1.TryPeek(`0@)">
            <summary>Attempts to return an object from the <see cref="T:System.Collections.Concurrent.ConcurrentBag`1"/> without removing it.</summary><returns>true if and object was returned successfully; otherwise, false.</returns><param name="result">When this method returns, <paramref name="result"/> contains an object from the <see cref="T:System.Collections.Concurrent.ConcurrentBag`1"/> or the default value of <paramref name="T"/> if the operation failed.</param>
        </member>
        <member name="T:System.Collections.Concurrent.ConcurrentDictionary`2">
            <summary>Represents a thread-safe collection of key-value pairs that can be accessed by multiple threads concurrently. </summary><typeparam name="TKey">The type of the values in the dictionary.</typeparam><typeparam name="TValue">The type of the keys in the dictionary.</typeparam>
        </member>
        <member name="M:System.Collections.Concurrent.ConcurrentDictionary`2.AddOrUpdate(`0,System.Func{`0,`1},System.Func{`0,`1,`1})">
            <summary>Adds a key/value pair to the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2"/> if the key does not already exist, or updates a key/value pair in the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2"/> if the key already exists.</summary><returns>The new value for the key. This will be either be the result of addValueFactory (if the key was absent) or the result of updateValueFactory (if the key was present).</returns><param name="key">The key to be added or whose value should be updated</param><param name="addValueFactory">The function used to generate a value for an absent key</param><param name="updateValueFactory">The function used to generate a new value for an existing key based on the key's existing value</param><exception cref="T:System.ArgumentNullException">
        <paramref name="key"/> is a null reference (Nothing in Visual Basic).-or-<paramref name="addValueFactory"/> is a null reference (Nothing in Visual Basic).-or-<paramref name="updateValueFactory"/> is a null reference (Nothing in Visual Basic).</exception><exception cref="T:System.OverflowException">The dictionary already contains the maximum number of elements, <see cref="F:System.Int32.MaxValue"/>.</exception>
        </member>
        <member name="M:System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(`0,System.Func{`0,`1})">
            <summary>Adds a key/value pair to the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2"/> if the key does not already exist.</summary><returns>The value for the key. This will be either the existing value for the key if the key is already in the dictionary, or the new value for the key as returned by valueFactory if the key was not in the dictionary.</returns><param name="key">The key of the element to add.</param><param name="valueFactory">The function used to generate a value for the key</param><exception cref="T:System.ArgumentNullException">
        <paramref name="key"/> is a null reference (Nothing in Visual Basic).-or-<paramref name="valueFactory"/> is a null reference (Nothing in Visual Basic).</exception><exception cref="T:System.OverflowException">The dictionary already contains the maximum number of elements, <see cref="F:System.Int32.MaxValue"/>.</exception>
        </member>
        <member name="M:System.Collections.Concurrent.ConcurrentDictionary`2.GetOrAdd(`0,`1)">
            <summary>Adds a key/value pair to the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2"/> if the key does not already exist.</summary><returns>The value for the key. This will be either the existing value for the key if the key is already in the dictionary, or the new value if the key was not in the dictionary.</returns><param name="key">The key of the element to add.</param><param name="value">the value to be added, if the key does not already exist</param><exception cref="T:System.ArgumentNullException">
        <paramref name="key"/> is a null reference (Nothing in Visual Basic).</exception><exception cref="T:System.OverflowException">The dictionary already contains the maximum number of elements, <see cref="F:System.Int32.MaxValue"/>.</exception>
        </member>
        <member name="M:System.Collections.Concurrent.ConcurrentDictionary`2.TryRemove(`0,`1@)">
            <summary>Attempts to remove and return the value with the specified key from the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2"/>.</summary><returns>true if an object was removed successfully; otherwise, false.</returns><param name="key">The key of the element to remove and return.</param><param name="value">When this method returns, <paramref name="value"/> contains the object removed from the <see cref="T:System.Collections.Concurrent.ConcurrentDictionary`2"/> or the default value of  if the operation failed.</param><exception cref="T:System.ArgumentNullException">
        <paramref name="key"/> is a null reference (Nothing in Visual Basic).</exception>
        </member>
        <member name="T:System.Collections.Concurrent.ConcurrentStack`1">
            <summary>Represents a thread-safe last in-first out (LIFO) collection.</summary><typeparam name="T">The type of the elements contained in the stack.</typeparam>
        </member>
        <member name="M:System.Collections.Concurrent.ConcurrentStack`1.#ctor">
            <summary>Initializes a new instance of the <see cref="T:System.Collections.Concurrent.ConcurrentStack`1"/> class.</summary>
        </member>
        <member name="M:System.Collections.Concurrent.ConcurrentStack`1.GetEnumerator">
            <summary>Returns an enumerator that iterates through the <see cref="T:System.Collections.Concurrent.ConcurrentStack`1"/>.</summary><returns>An enumerator for the <see cref="T:System.Collections.Concurrent.ConcurrentStack`1"/>.</returns>
        </member>
        <member name="M:System.Collections.Concurrent.ConcurrentStack`1.System#Collections#IEnumerable#GetEnumerator">
            <summary>Returns an enumerator that iterates through a collection.</summary><returns>An <see cref="T:System.Collections.IEnumerator"/> that can be used to iterate through the collection.</returns>
        </member>
        <member name="M:System.Collections.Concurrent.ConcurrentStack`1.CopyTo(`0[],System.Int32)">
            <summary>Copies the <see cref="T:System.Collections.Concurrent.ConcurrentStack`1"/> elements to an existing one-dimensional <see cref="T:System.Array"/>, starting at the specified array index.</summary><param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the elements copied from the <see cref="T:System.Collections.Concurrent.ConcurrentStack`1"/>. The <see cref="T:System.Array"/> must have zero-based indexing.</param><param name="index">The zero-based index in <paramref name="array"/> at which copying begins.</param><exception cref="T:System.ArgumentNullException">
        <paramref name="array"/> is a null reference (Nothing in Visual Basic).</exception><exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index"/> is less than zero.</exception><exception cref="T:System.ArgumentException">
        <paramref name="index"/> is equal to or greater than the length of the <paramref name="array"/> -or- The number of elements in the source <see cref="T:System.Collections.Concurrent.ConcurrentStack`1"/> is greater than the available space from <paramref name="index"/> to the end of the destination <paramref name="array"/>.</exception>
        </member>
        <member name="M:System.Collections.Concurrent.ConcurrentStack`1.System#Collections#ICollection#CopyTo(System.Array,System.Int32)">
            <summary>Copies the elements of the <see cref="T:System.Collections.ICollection"/> to an <see cref="T:System.Array"/>, starting at a particular <see cref="T:System.Array"/> index.</summary><param name="array">The one-dimensional <see cref="T:System.Array"/> that is the destination of the elements copied from the <see cref="T:System.Collections.Concurrent.ConcurrentStack`1"/>. The <see cref="T:System.Array"/> must have zero-based indexing.</param><param name="index">The zero-based index in <paramref name="array"/> at which copying begins.</param><exception cref="T:System.ArgumentNullException">
        <paramref name="array"/> is a null reference (Nothing in Visual Basic).</exception><exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="index"/> is less than zero.</exception><exception cref="T:System.ArgumentException">
        <paramref name="array"/> is multidimensional. -or- <paramref name="array"/> does not have zero-based indexing. -or- <paramref name="index"/> is equal to or greater than the length of the <paramref name="array"/> -or- The number of elements in the source <see cref="T:System.Collections.ICollection"/> is greater than the available space from <paramref name="index"/> to the end of the destination <paramref name="array"/>. -or- The type of the source <see cref="T:System.Collections.ICollection"/> cannot be cast automatically to the type of the destination <paramref name="array"/>.</exception>
        </member>
        <member name="M:System.Collections.Concurrent.ConcurrentStack`1.ToArray">
            <summary>Copies the items stored in the <see cref="T:System.Collections.Concurrent.ConcurrentStack`1"/> to a new array.</summary><returns>A new array containing a snapshot of elements copied from the <see cref="T:System.Collections.Concurrent.ConcurrentStack`1"/>.</returns>
        </member>
        <member name="M:System.Collections.Concurrent.ConcurrentStack`1.Push(`0)">
            <summary>Inserts an object at the top of the <see cref="T:System.Collections.Concurrent.ConcurrentStack`1"/>.</summary><param name="item">The object to push onto the <see cref="T:System.Collections.Concurrent.ConcurrentStack`1"/>. The value can be a null reference (Nothing in Visual Basic) for reference types.</param>
        </member>
        <member name="P:System.Collections.Concurrent.ConcurrentStack`1.Count">
            <summary>Gets the number of elements contained in the <see cref="T:System.Collections.Concurrent.ConcurrentStack`1"/>.</summary><returns>The number of elements contained in the <see cref="T:System.Collections.Concurrent.ConcurrentStack`1"/>.</returns>
        </member>
        <member name="P:System.Collections.Concurrent.ConcurrentStack`1.IsSynchronized">
            <summary>Gets a value indicating whether access to the <see cref="T:System.Collections.ICollection"/> is synchronized with the SyncRoot.</summary><returns>true if access to the <see cref="T:System.Collections.ICollection"/> is synchronized with the SyncRoot; otherwise, false. For <see cref="T:System.Collections.Concurrent.ConcurrentStack`1"/>, this property always returns false.</returns>
        </member>
        <member name="P:System.Collections.Concurrent.ConcurrentStack`1.SyncRoot">
            <summary>Gets an object that can be used to synchronize access to the <see cref="T:System.Collections.ICollection"/>. This property is not supported.</summary><returns>Returns null (Nothing in Visual Basic).</returns><exception cref="T:System.NotSupportedException">The SyncRoot property is not supported</exception>
        </member>
        <member name="T:System.Collections.Concurrent.Partitioner`1">
            <summary>Represents a particular manner of splitting a data source into multiple partitions.</summary><typeparam name="TSource">Type of the elements in the collection.</typeparam>
        </member>
        <member name="M:System.Collections.Concurrent.Partitioner`1.GetPartitions(System.Int32)">
            <summary>Partitions the underlying collection into the given number of partitions.</summary><returns>A list containing <paramref name="partitionCount"/> enumerators.</returns><param name="partitionCount">The number of partitions to create.</param>
        </member>
        <member name="M:System.Collections.Concurrent.Partitioner`1.GetDynamicPartitions">
            <summary>Creates an object that can partition the underlying collection into a variable number of partitions.</summary><returns>An object that can create partitions over the underlying data source.</returns><exception cref="T:System.NotSupportedException">Dynamic partitioning is not supported by the base class. You must implement it in a derived class.</exception>
        </member>
        <member name="P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions">
            <summary>Gets whether additional partitions can be created dynamically.</summary><returns>true if the <see cref="T:System.Collections.Concurrent.Partitioner`1"/> can create partitions dynamically as they are requested; false if the <see cref="T:System.Collections.Concurrent.Partitioner`1"/> can only allocate partitions statically.</returns>
        </member>
        <member name="T:System.Collections.Generic.EnumerableExtensions">
            <summary>
            Internal class providing <see cref="T:System.Collections.Generic.IEnumerable`1"/> support methods.
            </summary>
        </member>
        <member name="M:System.Collections.Generic.EnumerableExtensions.TypeSafeCopyTo``1(System.Collections.Generic.IEnumerable{``0},System.Array,System.Int32)">
            <summary>
            Copy contents from type collection to array, provided the array is of same type as collection.
            </summary>
            <typeparam name="T">Type of the collection items.</typeparam>
            <param name="source">Collection subject to copying.</param>
            <param name="array">Array to which the collection should be copied, items must be of same type as collection items.</param>
            <param name="index">Start index in <paramref name="array"/>.</param>
        </member>
        <member name="T:System.Collections.Generic.ListExtensions">
            <summary>
            Shim complement for the <see cref="T:System.Collections.Generic.List`1"/> class. <see cref="T:System.Collections.Generic.List`1"/> instance methods that are not available in the 
            PCL profile are here provided as equivalent extension methods.
            </summary>
        </member>
        <member name="M:System.Collections.Generic.ListExtensions.AsReadOnly``1(System.Collections.Generic.IList{``0})">
            <summary>Returns a read-only <see cref="T:System.Collections.Generic.IList`1"/> wrapper for the current collection.</summary><returns>A <see cref="T:System.Collections.ObjectModel.ReadOnlyCollection`1"/> that acts as a read-only wrapper around the current <see cref="T:System.Collections.Generic.List`1"/>.</returns>
        </member>
        <member name="T:System.ComponentModel.BrowsableAttribute">
            <summary>Specifies whether a property or event should be displayed in a Properties window.</summary>
        </member>
        <member name="M:System.ComponentModel.BrowsableAttribute.#ctor(System.Boolean)">
            <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.BrowsableAttribute"/> class.</summary><param name="browsable">true if a property or event can be modified at design time; otherwise, false. The default is true. </param>
        </member>
        <member name="T:System.ComponentModel.CategoryAttribute">
            <summary>Specifies the name of the category in which to group the property or event when displayed in a <see cref="T:System.Windows.Forms.PropertyGrid"/> control set to Categorized mode.</summary>
        </member>
        <member name="M:System.ComponentModel.CategoryAttribute.#ctor(System.String)">
            <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.CategoryAttribute"/> class using the specified category name.</summary><param name="category">The name of the category. </param>
        </member>
        <member name="T:System.ComponentModel.DataAnnotations.RangeAttribute">
            <summary>Specifies the numeric range constraints for the value of a data field. </summary>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.RangeAttribute.#ctor(System.Double,System.Double)">
            <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.DataAnnotations.RangeAttribute"/> class by using the specified minimum and maximum values. </summary><param name="minimum">Specifies the minimum value allowed for the data field value.</param><param name="maximum">Specifies the maximum value allowed for the data field value.</param>
        </member>
        <member name="M:System.ComponentModel.DataAnnotations.RangeAttribute.#ctor(System.Int32,System.Int32)">
            <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.DataAnnotations.RangeAttribute"/> class by using the specified minimum and maximum values.</summary><param name="minimum">Specifies the minimum value allowed for the data field value.</param><param name="maximum">Specifies the maximum value allowed for the data field value.</param>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.RangeAttribute.Minimum">
            <summary>Gets the minimum allowed field value.</summary><returns>The minimu value that is allowed for the data field.</returns>
        </member>
        <member name="P:System.ComponentModel.DataAnnotations.RangeAttribute.Maximum">
            <summary>Gets the maximum allowed field value.</summary><returns>The maximum value that is allowed for the data field.</returns>
        </member>
        <member name="T:System.ComponentModel.DescriptionAttribute">
            <summary>Specifies a description for a property or event.</summary>
        </member>
        <member name="M:System.ComponentModel.DescriptionAttribute.#ctor(System.String)">
            <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.DescriptionAttribute"/> class with a description.</summary><param name="description">The description text. </param>
        </member>
        <member name="P:System.ComponentModel.DescriptionAttribute.Description">
            <summary>Gets the description stored in this attribute.</summary><returns>The description stored in this attribute.</returns>
        </member>
        <member name="T:System.ComponentModel.DisplayNameAttribute">
            <summary>Specifies the display name for a property, event, or public void method which takes no arguments. </summary>
        </member>
        <member name="M:System.ComponentModel.DisplayNameAttribute.#ctor(System.String)">
            <summary>Initializes a new instance of the <see cref="T:System.ComponentModel.DisplayNameAttribute"/> class using the display name.</summary><param name="displayName">The display name.</param>
        </member>
        <member name="T:System.ComponentModel.ISynchronizeInvoke">
            <summary>Provides a way to synchronously or asynchronously execute a delegate.</summary>
        </member>
        <member name="T:System.Converter`2">
            <summary>Represents a method that converts an object from one type to another type.</summary><returns>The <paramref name="TOutput"/> that represents the converted <paramref name="TInput"/>.</returns><param name="input">The object to convert.</param><typeparam name="TInput">The type of object that is to be converted.This type parameter is contravariant. That is, you can use either the type you specified or any type that is less derived. For more information about covariance and contravariance, see Covariance and Contravariance in Generics.</typeparam><typeparam name="TOutput">The type the input object is to be converted to.This type parameter is covariant. That is, you can use either the type you specified or any type that is more derived. For more information about covariance and contravariance, see Covariance and Contravariance in Generics.</typeparam><filterpriority>1</filterpriority>
        </member>
        <member name="T:System.Data.Common.SchemaTableColumn">
            <summary>Describes the column metadata of the schema for a database table.</summary><filterpriority>2</filterpriority>
        </member>
        <member name="F:System.Data.Common.SchemaTableColumn.ColumnName">
            <summary>Specifies the name of the column in the schema table.</summary><filterpriority>2</filterpriority>
        </member>
        <member name="F:System.Data.Common.SchemaTableColumn.ColumnOrdinal">
            <summary>Specifies the ordinal of the column.</summary><filterpriority>2</filterpriority>
        </member>
        <member name="F:System.Data.Common.SchemaTableColumn.ColumnSize">
            <summary>Specifies the size of the column.</summary><filterpriority>2</filterpriority>
        </member>
        <member name="F:System.Data.Common.SchemaTableColumn.NumericPrecision">
            <summary>Specifies the precision of the column data, if the data is numeric.</summary><filterpriority>2</filterpriority>
        </member>
        <member name="F:System.Data.Common.SchemaTableColumn.NumericScale">
            <summary>Specifies the scale of the column data, if the data is numeric.</summary><filterpriority>2</filterpriority>
        </member>
        <member name="F:System.Data.Common.SchemaTableColumn.DataType">
            <summary>Specifies the type of data in the column.</summary><filterpriority>2</filterpriority>
        </member>
        <member name="F:System.Data.Common.SchemaTableColumn.ProviderType">
            <summary>Specifies the provider-specific data type of the column.</summary><filterpriority>2</filterpriority>
        </member>
        <member name="F:System.Data.Common.SchemaTableColumn.NonVersionedProviderType">
            <summary>Specifies the non-versioned provider-specific data type of the column.</summary>
        </member>
        <member name="F:System.Data.Common.SchemaTableColumn.IsLong">
            <summary>Specifies whether this column contains long data.</summary><filterpriority>2</filterpriority>
        </member>
        <member name="F:System.Data.Common.SchemaTableColumn.AllowDBNull">
            <summary>Specifies whether value DBNull is allowed.</summary><filterpriority>2</filterpriority>
        </member>
        <member name="F:System.Data.Common.SchemaTableColumn.IsAliased">
            <summary>Specifies whether this column is aliased.</summary><filterpriority>2</filterpriority>
        </member>
        <member name="F:System.Data.Common.SchemaTableColumn.IsExpression">
            <summary>Specifies whether this column is an expression.</summary><filterpriority>2</filterpriority>
        </member>
        <member name="F:System.Data.Common.SchemaTableColumn.IsKey">
            <summary>Specifies whether this column is a key for the table. </summary><filterpriority>2</filterpriority>
        </member>
        <member name="F:System.Data.Common.SchemaTableColumn.IsUnique">
            <summary>Specifies whether a unique constraint applies to this column.</summary><filterpriority>2</filterpriority>
        </member>
        <member name="F:System.Data.Common.SchemaTableColumn.BaseSchemaName">
            <summary>Specifies the name of the schema in the schema table.</summary><filterpriority>2</filterpriority>
        </member>
        <member name="F:System.Data.Common.SchemaTableColumn.BaseTableName">
            <summary>Specifies the name of the table in the schema table.</summary><filterpriority>2</filterpriority>
        </member>
        <member name="F:System.Data.Common.SchemaTableColumn.BaseColumnName">
            <summary>Specifies the name of the column in the schema table.</summary><filterpriority>2</filterpriority>
        </member>
        <member name="T:System.Data.Common.SchemaTableOptionalColumn">
            <summary>Describes optional column metadata of the schema for a database table.</summary><filterpriority>2</filterpriority>
        </member>
        <member name="F:System.Data.Common.SchemaTableOptionalColumn.ProviderSpecificDataType">
            <summary>Specifies the provider-specific data type of the column.</summary><filterpriority>2</filterpriority>
        </member>
        <member name="F:System.Data.Common.SchemaTableOptionalColumn.IsAutoIncrement">
            <summary>Specifies whether the column values in the column are automatically incremented.</summary><filterpriority>2</filterpriority>
        </member>
        <member name="F:System.Data.Common.SchemaTableOptionalColumn.IsHidden">
            <summary>Specifies whether this column is hidden.</summary><filterpriority>2</filterpriority>
        </member>
        <member name="F:System.Data.Common.SchemaTableOptionalColumn.IsReadOnly">
            <summary>Specifies whether this column is read-only.</summary><filterpriority>2</filterpriority>
        </member>
        <member name="F:System.Data.Common.SchemaTableOptionalColumn.IsRowVersion">
            <summary>Specifies whether this column contains row version information.</summary><filterpriority>2</filterpriority>
        </member>
        <member name="F:System.Data.Common.SchemaTableOptionalColumn.BaseServerName">
            <summary>The server name of the column.</summary><filterpriority>2</filterpriority>
        </member>
        <member name="F:System.Data.Common.SchemaTableOptionalColumn.BaseCatalogName">
            <summary>The name of the catalog associated with the results of the latest query.</summary><filterpriority>2</filterpriority>
        </member>
        <member name="F:System.Data.Common.SchemaTableOptionalColumn.AutoIncrementSeed">
            <summary>Specifies the value at which the series for new identity columns is assigned.</summary><filterpriority>2</filterpriority>
        </member>
        <member name="F:System.Data.Common.SchemaTableOptionalColumn.AutoIncrementStep">
            <summary>Specifies the increment between values in the identity column.</summary><filterpriority>2</filterpriority>
        </member>
        <member name="F:System.Data.Common.SchemaTableOptionalColumn.DefaultValue">
            <summary>The default value for the column.</summary><filterpriority>2</filterpriority>
        </member>
        <member name="F:System.Data.Common.SchemaTableOptionalColumn.Expression">
            <summary>The expression used to compute the column.</summary><filterpriority>2</filterpriority>
        </member>
        <member name="F:System.Data.Common.SchemaTableOptionalColumn.BaseTableNamespace">
            <summary>The namespace for the table that contains the column.</summary><filterpriority>2</filterpriority>
        </member>
        <member name="F:System.Data.Common.SchemaTableOptionalColumn.BaseColumnNamespace">
            <summary>The namespace of the column.</summary><filterpriority>2</filterpriority>
        </member>
        <member name="F:System.Data.Common.SchemaTableOptionalColumn.ColumnMapping">
            <summary>Specifies the mapping for the column.</summary><filterpriority>1</filterpriority>
        </member>
        <member name="T:System.Data.DataColumn">
            <summary>Represents the schema of a column in a <see cref="T:System.Data.DataTable"/>.</summary><filterpriority>1</filterpriority>
        </member>
        <member name="M:System.Data.DataColumn.#ctor(System.Data.DataTable,System.String,System.Type)">
            <summary>Inititalizes a new instance of the <see cref="T:System.Data.DataColumn"/> class using the specified column name and data type.</summary><param name="columnName">A string that represents the name of the column to be created. If set to null or an empty string (""), a default name will be specified when added to the columns collection. </param><param name="dataType">A supported <see cref="P:System.Data.DataColumn.DataType"/>. </param><exception cref="T:System.ArgumentNullException">No <paramref name="dataType"/> was specified. </exception>
            <param name="table"><see cref="T:System.Data.DataTable"/> in which the column resides.</param>
        </member>
        <member name="P:System.Data.DataColumn.Table">
            <summary>Gets the <see cref="T:System.Data.DataTable"/> to which the column belongs to.</summary><returns>The <see cref="T:System.Data.DataTable"/> that the <see cref="T:System.Data.DataColumn"/> belongs to.</returns><filterpriority>1</filterpriority>
        </member>
        <member name="P:System.Data.DataColumn.ReadOnly">
            <summary>Gets or sets a value that indicates whether the column allows for changes as soon as a row has been added to the table.</summary><returns>true if the column is read only; otherwise, false. The default is false.</returns><exception cref="T:System.ArgumentException">The property is set to false on a computed column. </exception><filterpriority>1</filterpriority><PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true"/>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*"/>
      </PermissionSet>
        </member>
        <member name="P:System.Data.DataColumn.DataType">
            <summary>Gets or sets the type of data stored in the column.</summary><returns>A <see cref="T:System.Type"/> object that represents the column data type.</returns><exception cref="T:System.ArgumentException">The column already has data stored. </exception><filterpriority>1</filterpriority><PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true"/>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true"/>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence"/>
      </PermissionSet>
        </member>
        <member name="P:System.Data.DataColumn.MaxLength">
            <summary>Gets or sets the maximum length of a text column.</summary><returns>The maximum length of the column in characters. If the column has no maximum length, the value is –1 (default).</returns><filterpriority>1</filterpriority><PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true"/>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*"/>
      </PermissionSet>
        </member>
        <member name="P:System.Data.DataColumn.ColumnName">
            <summary>Gets or sets the name of the column in the <see cref="T:System.Data.DataColumnCollection"/>.</summary><returns>The name of the column.</returns><exception cref="T:System.ArgumentException">The property is set to null or an empty string and the column belongs to a collection. </exception><exception cref="T:System.Data.DuplicateNameException">A column with the same name already exists in the collection. The name comparison is not case sensitive. </exception><filterpriority>1</filterpriority><PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true"/>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*"/>
      </PermissionSet>
        </member>
        <member name="P:System.Data.DataColumn.Caption">
            <summary>Gets or sets the caption for the column.</summary><returns>The caption of the column. If not set, returns the <see cref="P:System.Data.DataColumn.ColumnName"/> value.</returns><filterpriority>1</filterpriority>
        </member>
        <member name="T:System.Data.DataColumnCollection">
            <summary>Represents a collection of <see cref="T:System.Data.DataColumn"/> objects for a <see cref="T:System.Data.DataTable"/>.</summary><filterpriority>1</filterpriority>
        </member>
        <member name="M:System.Data.DataColumnCollection.#ctor(System.Data.DataTable)">
            <summary>
            Initializes a collection of data columns.
            </summary>
            <param name="table">Table that is the owner of the collection of data columns.</param>
        </member>
        <member name="M:System.Data.DataColumnCollection.Add(System.String,System.Type)">
            <summary>Creates and adds a <see cref="T:System.Data.DataColumn"/> object that has the specified name and type to the <see cref="T:System.Data.DataColumnCollection"/>.</summary><returns>The newly created <see cref="T:System.Data.DataColumn"/>.</returns><param name="columnName">The <see cref="P:System.Data.DataColumn.ColumnName"/> to use when you create the column. </param><param name="type">The <see cref="P:System.Data.DataColumn.DataType"/> of the new column. </param><exception cref="T:System.Data.DuplicateNameException">The collection already has a column with the specified name. (The comparison is not case-sensitive.) </exception><exception cref="T:System.Data.InvalidExpressionException">The expression is invalid. See the <see cref="P:System.Data.DataColumn.Expression"/> property for more information about how to create expressions. </exception><filterpriority>1</filterpriority><PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true"/>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true"/>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence"/>
      </PermissionSet>
        </member>
        <member name="M:System.Data.DataColumnCollection.Contains(System.String)">
            <summary>Checks whether the collection contains a column with the specified name.</summary><returns>true if a column exists with this name; otherwise, false.</returns><param name="name">The <see cref="P:System.Data.DataColumn.ColumnName"/> of the column to look for. </param><filterpriority>1</filterpriority>
        </member>
        <member name="M:System.Data.DataColumnCollection.GetEnumerator">
            <summary>Gets an <see cref="T:System.Collections.IEnumerator"/> for the collection.</summary><returns>An <see cref="T:System.Collections.IEnumerator"/> for the collection.</returns><filterpriority>2</filterpriority>
        </member>
        <member name="M:System.Data.DataColumnCollection.CopyTo(System.Array,System.Int32)">
            <summary>Copies all the elements of the current <see cref="T:System.Data.InternalDataCollectionBase"/> to a one-dimensional <see cref="T:System.Array"/>, starting at the specified <see cref="T:System.Data.InternalDataCollectionBase"/> index.</summary><param name="ar">The one-dimensional <see cref="T:System.Array"/> to copy the current <see cref="T:System.Data.InternalDataCollectionBase"/> object's elements into. </param><param name="index">The destination <see cref="T:System.Array"/> index to start copying into. </param><filterpriority>2</filterpriority>
        </member>
        <member name="P:System.Data.DataColumnCollection.Item(System.String)">
            <summary>Gets the <see cref="T:System.Data.DataColumn"/> from the collection with the specified name.</summary><returns>The <see cref="T:System.Data.DataColumn"/> in the collection with the specified <see cref="P:System.Data.DataColumn.ColumnName"/>; otherwise a null value if the <see cref="T:System.Data.DataColumn"/> does not exist.</returns><param name="name">The <see cref="P:System.Data.DataColumn.ColumnName"/> of the column to return. </param><filterpriority>1</filterpriority><PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true"/>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*"/>
      </PermissionSet>
        </member>
        <member name="P:System.Data.DataColumnCollection.Item(System.Int32)">
            <summary>Gets the <see cref="T:System.Data.DataColumn"/> from the collection at the specified index.</summary><returns>The <see cref="T:System.Data.DataColumn"/> at the specified index.</returns><param name="index">The zero-based index of the column to return. </param><exception cref="T:System.IndexOutOfRangeException">The index value is greater than the number of items in the collection. </exception><filterpriority>1</filterpriority><PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true"/>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*"/>
      </PermissionSet>
        </member>
        <member name="P:System.Data.DataColumnCollection.Count">
            <summary>Gets the total number of elements in a collection.</summary><returns>The total number of elements in a collection.</returns><filterpriority>1</filterpriority>
        </member>
        <member name="P:System.Data.DataColumnCollection.IsSynchronized">
            <summary>Gets a value that indicates whether the <see cref="T:System.Data.InternalDataCollectionBase"/> is synchonized.</summary><returns>true if the collection is synchronized; otherwise, false. The default is false.</returns><filterpriority>2</filterpriority>
        </member>
        <member name="P:System.Data.DataColumnCollection.SyncRoot">
            <summary>Gets an object that can be used to synchronize the collection.</summary><returns>The <see cref="T:System.object"/> used to synchronize the collection.</returns><filterpriority>2</filterpriority>
        </member>
        <member name="T:System.Data.DataRow">
            <summary>Represents a row of data in a <see cref="T:System.Data.DataTable"/>.</summary><filterpriority>1</filterpriority>
        </member>
        <member name="M:System.Data.DataRow.#ctor(System.Data.DataTable,System.Collections.IEnumerable)">
            <summary>
            Initializes a data row with specified cells.
            </summary>
            <param name="table">Data table that is the owner of this data row.</param>
            <param name="cells">Cells to be included in the data row.</param>
        </member>
        <member name="M:System.Data.DataRow.#ctor(System.Data.DataTable)">
            <summary>
            Initializes an empty data row.
            </summary>
            <param name="table">Data table that is the owner of this data row.</param>
        </member>
        <member name="P:System.Data.DataRow.Item(System.Int32)">
            <summary>Gets or sets the data stored in the column specified by index.</summary><returns>An <see cref="T:System.Object"/> that contains the data.</returns><param name="columnIndex">The zero-based index of the column. </param><exception cref="T:System.Data.DeletedRowInaccessibleException">Occurs when you try to set a value on a deleted row. </exception><exception cref="T:System.IndexOutOfRangeException">The <paramref name="columnIndex"/> argument is out of range. </exception><exception cref="T:System.InvalidCastException">Occurs when you set the value and the new value's <see cref="T:System.Type"/> does not match <see cref="P:System.Data.DataColumn.DataType"/>. </exception><filterpriority>1</filterpriority><PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true"/>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*"/>
      </PermissionSet>
        </member>
        <member name="P:System.Data.DataRow.Item(System.Data.DataColumn)">
            <summary>Gets or sets the data stored in the specified <see cref="T:System.Data.DataColumn"/>.</summary><returns>An <see cref="T:System.Object"/> that contains the data.</returns><param name="column">A <see cref="T:System.Data.DataColumn"/> that contains the data. </param><exception cref="T:System.ArgumentException">The column does not belong to this table. </exception><exception cref="T:System.ArgumentNullException">The <paramref name="column"/> is null. </exception><exception cref="T:System.Data.DeletedRowInaccessibleException">An attempt was made to set a value on a deleted row. </exception><exception cref="T:System.InvalidCastException">The data types of the value and the column do not match. </exception><filterpriority>1</filterpriority><PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true"/>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*"/>
      </PermissionSet>
        </member>
        <member name="P:System.Data.DataRow.Item(System.String)">
            <summary>Gets or sets the data stored in the column specified by name.</summary><returns>An <see cref="T:System.Object"/> that contains the data.</returns><param name="columnName">The name of the column. </param><exception cref="T:System.ArgumentException">The column specified by <paramref name="columnName"/> cannot be found. </exception><exception cref="T:System.Data.DeletedRowInaccessibleException">Occurs when you try to set a value on a deleted row. </exception><exception cref="T:System.InvalidCastException">Occurs when you set a value and its <see cref="T:System.Type"/> does not match <see cref="P:System.Data.DataColumn.DataType"/>. </exception><filterpriority>1</filterpriority><PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true"/>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*"/>
      </PermissionSet>
        </member>
        <member name="P:System.Data.DataRow.Table">
            <summary>Gets the <see cref="T:System.Data.DataTable"/> for which this row has a schema.</summary><returns>The <see cref="T:System.Data.DataTable"/> to which this row belongs.</returns><filterpriority>1</filterpriority>
        </member>
        <member name="P:System.Data.DataRow.RowError">
            <summary>Gets or sets the custom error description for a row.</summary><returns>The text describing an error.</returns><filterpriority>1</filterpriority>
        </member>
        <member name="P:System.Data.DataRow.ItemArray">
            <summary>Gets or sets all the values for this row through an array.</summary><returns>An array of type <see cref="T:System.Object"/>.</returns><exception cref="T:System.ArgumentException">The array is larger than the number of columns in the table. </exception><exception cref="T:System.InvalidCastException">A value in the array does not match its <see cref="P:System.Data.DataColumn.DataType"/> in its respective <see cref="T:System.Data.DataColumn"/>. </exception><exception cref="T:System.Data.ConstraintException">An edit broke a constraint. </exception><exception cref="T:System.Data.ReadOnlyException">An edit tried to change the value of a read-only column. </exception><exception cref="T:System.Data.NoNullAllowedException">An edit tried to put a null value in a column where <see cref="P:System.Data.DataColumn.AllowDBNull"/> of the <see cref="T:System.Data.DataColumn"/> object is false. </exception><exception cref="T:System.Data.DeletedRowInaccessibleException">The row has been deleted. </exception><filterpriority>2</filterpriority><PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true"/>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true"/>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence"/>
      </PermissionSet>
        </member>
        <member name="T:System.Data.DataRowCollection">
            <summary>Represents a collection of rows for a <see cref="T:System.Data.DataTable"/>.</summary><filterpriority>1</filterpriority>
        </member>
        <member name="M:System.Data.DataRowCollection.#ctor(System.Data.DataTable)">
            <summary>
            Initializes a collection of data rows.
            </summary>
            <param name="table">Data table that owns this collection of data rows.</param>
        </member>
        <member name="M:System.Data.DataRowCollection.Add(System.Data.DataRow)">
            <summary>Adds the specified <see cref="T:System.Data.DataRow"/> to the <see cref="T:System.Data.DataRowCollection"/> object.</summary><param name="row">The <see cref="T:System.Data.DataRow"/> to add. </param><exception cref="T:System.ArgumentNullException">The row is null. </exception><exception cref="T:System.ArgumentException">The row either belongs to another table or already belongs to this table. </exception><exception cref="T:System.Data.ConstraintException">The addition invalidates a constraint. </exception><exception cref="T:System.Data.NoNullAllowedException">The addition tries to put a null in a <see cref="T:System.Data.DataColumn"/> where <see cref="P:System.Data.DataColumn.AllowDBNull"/> is false </exception><filterpriority>1</filterpriority><PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true"/>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true"/>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence"/>
      </PermissionSet>
        </member>
        <member name="M:System.Data.DataRowCollection.Add(System.Object[])">
            <summary>Creates a row using specified values and adds it to the <see cref="T:System.Data.DataRowCollection"/>.</summary><returns>None.</returns><param name="values">The array of values that are used to create the new row. </param><exception cref="T:System.ArgumentException">The array is larger than the number of columns in the table. </exception><exception cref="T:System.InvalidCastException">A value does not match its respective column type. </exception><exception cref="T:System.Data.ConstraintException">Adding the row invalidates a constraint. </exception><exception cref="T:System.Data.NoNullAllowedException">Trying to put a null in a column where <see cref="P:System.Data.DataColumn.AllowDBNull"/> is false. </exception><filterpriority>1</filterpriority><PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true"/>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true"/>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence"/>
      </PermissionSet>
        </member>
        <member name="M:System.Data.DataRowCollection.Remove(System.Data.DataRow)">
            <summary>Removes the specified <see cref="T:System.Data.DataRow"/> from the collection.</summary><param name="row">The <see cref="T:System.Data.DataRow"/> to remove. </param><filterpriority>1</filterpriority><PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true"/>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*"/>
      </PermissionSet>
        </member>
        <member name="M:System.Data.DataRowCollection.IndexOf(System.Data.DataRow)">
            <summary>Gets the index of the specified <see cref="T:System.Data.DataRow"/> object.</summary><returns>The zero-based index of the row, or -1 if the row is not found in the collection.</returns><param name="row">The DataRow to search for.</param><filterpriority>1</filterpriority><PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true"/>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*"/>
      </PermissionSet>
        </member>
        <member name="M:System.Data.DataRowCollection.GetEnumerator">
            <summary>Gets an <see cref="T:System.Collections.IEnumerator"/> for this collection.</summary><returns>An <see cref="T:System.Collections.IEnumerator"/> for this collection.</returns>
        </member>
        <member name="M:System.Data.DataRowCollection.CopyTo(System.Array,System.Int32)">
            <summary>Copies all the <see cref="T:System.Data.DataRow"/> objects from the collection into the given array, starting at the given destination array index.</summary><param name="ar">The one-dimensional array that is the destination of the elements copied from the DataRowCollection. The array must have zero-based indexing.</param><param name="index">The zero-based index in the array at which copying begins.</param>
        </member>
        <member name="P:System.Data.DataRowCollection.Item(System.Int32)">
            <summary>Gets the row at the specified index.</summary><returns>The specified <see cref="T:System.Data.DataRow"/>.</returns><param name="index">The zero-based index of the row to return. </param><exception cref="T:System.IndexOutOfRangeException">The index value is greater than the number of items in the collection. </exception><filterpriority>1</filterpriority><PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true"/>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*"/>
      </PermissionSet>
        </member>
        <member name="P:System.Data.DataRowCollection.Count">
            <summary>Gets the total number of <see cref="T:System.Data.DataRow"/> objects in this collection.</summary><returns>The total number of <see cref="T:System.Data.DataRow"/> objects in this collection.</returns>
        </member>
        <member name="P:System.Data.DataRowCollection.IsSynchronized">
            <summary>Gets a value that indicates whether the <see cref="T:System.Data.InternalDataCollectionBase"/> is synchonized.</summary><returns>true if the collection is synchronized; otherwise, false. The default is false.</returns><filterpriority>2</filterpriority>
        </member>
        <member name="P:System.Data.DataRowCollection.SyncRoot">
            <summary>Gets an object that can be used to synchronize the collection.</summary><returns>The <see cref="T:System.object"/> used to synchronize the collection.</returns><filterpriority>2</filterpriority>
        </member>
        <member name="T:System.Data.DataTable">
            <summary>Represents one table of in-memory data.</summary><filterpriority>1</filterpriority>
        </member>
        <member name="M:System.Data.DataTable.#ctor">
            <summary>Initializes a new instance of the <see cref="T:System.Data.DataTable"/> class with no arguments.</summary>
        </member>
        <member name="M:System.Data.DataTable.#ctor(System.String)">
            <summary>Initializes a new instance of the <see cref="T:System.Data.DataTable"/> class with the specified table name.</summary><param name="tableName">The name to give the table. If <paramref name="tableName"/> is null or an empty string, a default name is given when added to the <see cref="T:System.Data.DataTableCollection"/>. </param>
        </member>
        <member name="M:System.Data.DataTable.Clone">
            <summary>Clones the structure of the <see cref="T:System.Data.DataTable"/>, including all <see cref="T:System.Data.DataTable"/> schemas and constraints.</summary><returns>A new <see cref="T:System.Data.DataTable"/> with the same schema as the current <see cref="T:System.Data.DataTable"/>.</returns><filterpriority>2</filterpriority><PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true"/>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true"/>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence"/>
      </PermissionSet>
        </member>
        <member name="M:System.Data.DataTable.Copy">
            <summary>Copies both the structure and data for this <see cref="T:System.Data.DataTable"/>.</summary><returns>A new <see cref="T:System.Data.DataTable"/> with the same structure (table schemas and constraints) and data as this <see cref="T:System.Data.DataTable"/>.If these classes have been derived, the copy will also be of the same derived classes.Both the <see cref="M:System.Data.DataTable.Copy"/> and the <see cref="M:System.Data.DataTable.Clone"/> methods create a new DataTable with the same structure as the original DataTable. The new DataTable created by the <see cref="M:System.Data.DataTable.Copy"/> method has the same set of DataRows as the original table, but the new DataTable created by the <see cref="M:System.Data.DataTable.Clone"/> method does not contain any DataRows.</returns><filterpriority>2</filterpriority><PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true"/>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true"/>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence"/>
      </PermissionSet>
        </member>
        <member name="M:System.Data.DataTable.ImportRow(System.Data.DataRow)">
            <summary>Copies a <see cref="T:System.Data.DataRow"/> into a <see cref="T:System.Data.DataTable"/>, preserving any property settings, as well as original and current values.</summary><param name="row">The <see cref="T:System.Data.DataRow"/> to be imported. </param><filterpriority>1</filterpriority><PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true"/>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true"/>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence"/>
      </PermissionSet>
        </member>
        <member name="M:System.Data.DataTable.NewRow">
            <summary>Creates a new <see cref="T:System.Data.DataRow"/> with the same schema as the table.</summary><returns>A <see cref="T:System.Data.DataRow"/> with the same schema as the <see cref="T:System.Data.DataTable"/>.</returns><filterpriority>1</filterpriority><PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true"/>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true"/>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence"/>
      </PermissionSet>
        </member>
        <member name="M:System.Data.DataTable.Select(System.String,System.String)">
            <summary>Gets an array of all <see cref="T:System.Data.DataRow"/> objects that match the filter criteria, in the specified sort order.</summary><returns>An array of <see cref="T:System.Data.DataRow"/> objects matching the filter expression.</returns><param name="filterExpression">The criteria to use to filter the rows. </param><param name="sort">A string specifying the column and sort direction. </param><filterpriority>1</filterpriority><PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true"/>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*"/>
      </PermissionSet>
        </member>
        <member name="M:System.Data.DataTable.Load(System.Data.IDataReader)">
            <summary>Fills a <see cref="T:System.Data.DataTable"/> with values from a data source using the supplied <see cref="T:System.Data.IDataReader"/>. If the <see cref="T:System.Data.DataTable"/> already contains rows, the incoming data from the data source is merged with the existing rows.</summary><param name="reader">An <see cref="T:System.Data.IDataReader"/> that provides a result set.</param><filterpriority>1</filterpriority><PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true"/>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true"/>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence"/>
      </PermissionSet>
        </member>
        <member name="P:System.Data.DataTable.TableName">
            <summary>Gets or sets the name of the <see cref="T:System.Data.DataTable"/>.</summary><returns>The name of the <see cref="T:System.Data.DataTable"/>.</returns><exception cref="T:System.ArgumentException">null or empty string ("") is passed in and this table belongs to a collection. </exception><exception cref="T:System.Data.DuplicateNameException">The table belongs to a collection that already has a table with the same name. (Comparison is case-sensitive).</exception><filterpriority>1</filterpriority><PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true"/>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*"/>
      </PermissionSet>
        </member>
        <member name="P:System.Data.DataTable.Columns">
            <summary>Gets the collection of columns that belong to this table.</summary><returns>A <see cref="T:System.Data.DataColumnCollection"/> that contains the collection of <see cref="T:System.Data.DataColumn"/> objects for the table. An empty collection is returned if no <see cref="T:System.Data.DataColumn"/> objects exist.</returns><filterpriority>1</filterpriority>
        </member>
        <member name="P:System.Data.DataTable.Rows">
            <summary>Gets the collection of rows that belong to this table.</summary><returns>A <see cref="T:System.Data.DataRowCollection"/> that contains <see cref="T:System.Data.DataRow"/> objects; otherwise a null value if no <see cref="T:System.Data.DataRow"/> objects exist.</returns><filterpriority>1</filterpriority>
        </member>
        <member name="P:System.Data.DataTable.Locale">
            <summary>Gets or sets the locale information used to compare strings within the table.</summary><returns>A <see cref="T:System.Globalization.CultureInfo"/> that contains data about the user's machine locale. The default is the <see cref="T:System.Data.DataSet"/> object's <see cref="T:System.Globalization.CultureInfo"/> (returned by the <see cref="P:System.Data.DataSet.Locale"/> property) to which the <see cref="T:System.Data.DataTable"/> belongs; if the table doesn't belong to a <see cref="T:System.Data.DataSet"/>, the default is the current system <see cref="T:System.Globalization.CultureInfo"/>.</returns><filterpriority>2</filterpriority><PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true"/>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*"/>
      </PermissionSet>
        </member>
        <member name="P:System.Data.DataTable.DefaultView">
            <summary>Gets a customized view of the table that may include a filtered view, or a cursor position.</summary><returns>The <see cref="T:System.Data.DataView"/> associated with the <see cref="T:System.Data.DataTable"/>.</returns><filterpriority>2</filterpriority><PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true"/>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true"/>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence"/>
      </PermissionSet>
        </member>
        <member name="P:System.Data.DataTable.MinimumCapacity">
            <summary>Gets or sets the initial starting size for this table.</summary><returns>The initial starting size in rows of this table. The default is 50.</returns><filterpriority>2</filterpriority><PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true"/>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*"/>
      </PermissionSet>
        </member>
        <member name="T:System.Data.DataView">
            <summary>Represents a databindable, customized view of a <see cref="T:System.Data.DataTable"/> for sorting, filtering, searching, editing, and navigation.</summary><filterpriority>1</filterpriority>
        </member>
        <member name="M:System.Data.DataView.#ctor(System.Data.DataTable)">
            <summary>
            Initializes a data view.
            </summary>
            <param name="table">Data table for which the view should be defined.</param>
        </member>
        <member name="M:System.Data.DataView.ToTable(System.Boolean,System.String[])">
            <summary>Creates and returns a new <see cref="T:System.Data.DataTable"/> based on rows in an existing <see cref="T:System.Data.DataView"/>.</summary><returns>A new <see cref="T:System.Data.DataTable"/> instance that contains the requested rows and columns.</returns><param name="distinct">If true, the returned <see cref="T:System.Data.DataTable"/> contains rows that have distinct values for all its columns. The default value is false.</param><param name="columnNames">A string array that contains a list of the column names to be included in the returned <see cref="T:System.Data.DataTable"/>. The <see cref="T:System.Data.DataTable"/> contains the specified columns in the order they appear within this array.</param><filterpriority>1</filterpriority><PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true"/>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true"/>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence"/>
      </PermissionSet>
        </member>
        <member name="T:System.Data.DbType">
            <summary>Specifies the data type of a field, a property, or a Parameter object of a .NET Framework data provider.</summary><filterpriority>2</filterpriority>
        </member>
        <member name="F:System.Data.DbType.String">
            <summary>A type representing Unicode character strings.</summary>
        </member>
        <member name="T:System.Data.IDataReader">
            <summary>Provides a means of reading one or more forward-only streams of result sets obtained by executing a command at a data source, and is implemented by .NET Framework data providers that access relational databases.</summary><filterpriority>2</filterpriority>
        </member>
        <member name="T:System.Data.IDataRecord">
            <summary>Provides access to the column values within each row for a DataReader, and is implemented by .NET Framework data providers that access relational databases.</summary><filterpriority>2</filterpriority>
        </member>
        <member name="M:System.Data.IDataRecord.GetName(System.Int32)">
            <summary>Gets the name for the field to find.</summary><returns>The name of the field or the empty string (""), if there is no value to return.</returns><param name="i">The index of the field to find. </param><exception cref="T:System.IndexOutOfRangeException">The index passed was outside the range of 0 through <see cref="P:System.Data.IDataRecord.FieldCount"/>. </exception><filterpriority>2</filterpriority>
        </member>
        <member name="M:System.Data.IDataRecord.GetDataTypeName(System.Int32)">
            <summary>Gets the data type information for the specified field.</summary><returns>The data type information for the specified field.</returns><param name="i">The index of the field to find. </param><exception cref="T:System.IndexOutOfRangeException">The index passed was outside the range of 0 through <see cref="P:System.Data.IDataRecord.FieldCount"/>. </exception><filterpriority>2</filterpriority>
        </member>
        <member name="M:System.Data.IDataRecord.GetFieldType(System.Int32)">
            <summary>Gets the <see cref="T:System.Type"/> information corresponding to the type of <see cref="T:System.Object"/> that would be returned from <see cref="M:System.Data.IDataRecord.GetValue(System.Int32)"/>.</summary><returns>The <see cref="T:System.Type"/> information corresponding to the type of <see cref="T:System.Object"/> that would be returned from <see cref="M:System.Data.IDataRecord.GetValue(System.Int32)"/>.</returns><param name="i">The index of the field to find. </param><exception cref="T:System.IndexOutOfRangeException">The index passed was outside the range of 0 through <see cref="P:System.Data.IDataRecord.FieldCount"/>. </exception><filterpriority>2</filterpriority>
        </member>
        <member name="M:System.Data.IDataRecord.GetValue(System.Int32)">
            <summary>Return the value of the specified field.</summary><returns>The <see cref="T:System.Object"/> which will contain the field value upon return.</returns><param name="i">The index of the field to find. </param><exception cref="T:System.IndexOutOfRangeException">The index passed was outside the range of 0 through <see cref="P:System.Data.IDataRecord.FieldCount"/>. </exception><filterpriority>2</filterpriority>
        </member>
        <member name="M:System.Data.IDataRecord.GetValues(System.Object[])">
            <summary>Populates an array of objects with the column values of the current record.</summary><returns>The number of instances of <see cref="T:System.Object"/> in the array.</returns><param name="values">An array of <see cref="T:System.Object"/> to copy the attribute fields into. </param><filterpriority>2</filterpriority>
        </member>
        <member name="M:System.Data.IDataRecord.GetOrdinal(System.String)">
            <summary>Return the index of the named field.</summary><returns>The index of the named field.</returns><param name="name">The name of the field to find. </param><filterpriority>2</filterpriority>
        </member>
        <member name="M:System.Data.IDataRecord.GetBoolean(System.Int32)">
            <summary>Gets the value of the specified column as a Boolean.</summary><returns>The value of the column.</returns><param name="i">The zero-based column ordinal. </param><exception cref="T:System.IndexOutOfRangeException">The index passed was outside the range of 0 through <see cref="P:System.Data.IDataRecord.FieldCount"/>. </exception><filterpriority>2</filterpriority>
        </member>
        <member name="M:System.Data.IDataRecord.GetByte(System.Int32)">
            <summary>Gets the 8-bit unsigned integer value of the specified column.</summary><returns>The 8-bit unsigned integer value of the specified column.</returns><param name="i">The zero-based column ordinal. </param><exception cref="T:System.IndexOutOfRangeException">The index passed was outside the range of 0 through <see cref="P:System.Data.IDataRecord.FieldCount"/>. </exception><filterpriority>2</filterpriority>
        </member>
        <member name="M:System.Data.IDataRecord.GetBytes(System.Int32,System.Int64,System.Byte[],System.Int32,System.Int32)">
            <summary>Reads a stream of bytes from the specified column offset into the buffer as an array, starting at the given buffer offset.</summary><returns>The actual number of bytes read.</returns><param name="i">The zero-based column ordinal. </param><param name="fieldOffset">The index within the field from which to start the read operation. </param><param name="buffer">The buffer into which to read the stream of bytes. </param><param name="bufferoffset">The index for <paramref name="buffer"/> to start the read operation. </param><param name="length">The number of bytes to read. </param><exception cref="T:System.IndexOutOfRangeException">The index passed was outside the range of 0 through <see cref="P:System.Data.IDataRecord.FieldCount"/>. </exception><filterpriority>2</filterpriority>
        </member>
        <member name="M:System.Data.IDataRecord.GetChar(System.Int32)">
            <summary>Gets the character value of the specified column.</summary><returns>The character value of the specified column.</returns><param name="i">The zero-based column ordinal. </param><exception cref="T:System.IndexOutOfRangeException">The index passed was outside the range of 0 through <see cref="P:System.Data.IDataRecord.FieldCount"/>. </exception><filterpriority>2</filterpriority>
        </member>
        <member name="M:System.Data.IDataRecord.GetChars(System.Int32,System.Int64,System.Char[],System.Int32,System.Int32)">
            <summary>Reads a stream of characters from the specified column offset into the buffer as an array, starting at the given buffer offset.</summary><returns>The actual number of characters read.</returns><param name="i">The zero-based column ordinal. </param><param name="fieldoffset">The index within the row from which to start the read operation. </param><param name="buffer">The buffer into which to read the stream of bytes. </param><param name="bufferoffset">The index for <paramref name="buffer"/> to start the read operation. </param><param name="length">The number of bytes to read. </param><exception cref="T:System.IndexOutOfRangeException">The index passed was outside the range of 0 through <see cref="P:System.Data.IDataRecord.FieldCount"/>. </exception><filterpriority>2</filterpriority>
        </member>
        <member name="M:System.Data.IDataRecord.GetGuid(System.Int32)">
            <summary>Returns the GUID value of the specified field.</summary><returns>The GUID value of the specified field.</returns><param name="i">The index of the field to find. </param><exception cref="T:System.IndexOutOfRangeException">The index passed was outside the range of 0 through <see cref="P:System.Data.IDataRecord.FieldCount"/>. </exception><filterpriority>2</filterpriority>
        </member>
        <member name="M:System.Data.IDataRecord.GetInt16(System.Int32)">
            <summary>Gets the 16-bit signed integer value of the specified field.</summary><returns>The 16-bit signed integer value of the specified field.</returns><param name="i">The index of the field to find. </param><exception cref="T:System.IndexOutOfRangeException">The index passed was outside the range of 0 through <see cref="P:System.Data.IDataRecord.FieldCount"/>. </exception><filterpriority>2</filterpriority>
        </member>
        <member name="M:System.Data.IDataRecord.GetInt32(System.Int32)">
            <summary>Gets the 32-bit signed integer value of the specified field.</summary><returns>The 32-bit signed integer value of the specified field.</returns><param name="i">The index of the field to find. </param><exception cref="T:System.IndexOutOfRangeException">The index passed was outside the range of 0 through <see cref="P:System.Data.IDataRecord.FieldCount"/>. </exception><filterpriority>2</filterpriority>
        </member>
        <member name="M:System.Data.IDataRecord.GetInt64(System.Int32)">
            <summary>Gets the 64-bit signed integer value of the specified field.</summary><returns>The 64-bit signed integer value of the specified field.</returns><param name="i">The index of the field to find. </param><exception cref="T:System.IndexOutOfRangeException">The index passed was outside the range of 0 through <see cref="P:System.Data.IDataRecord.FieldCount"/>. </exception><filterpriority>2</filterpriority>
        </member>
        <member name="M:System.Data.IDataRecord.GetFloat(System.Int32)">
            <summary>Gets the single-precision floating point number of the specified field.</summary><returns>The single-precision floating point number of the specified field.</returns><param name="i">The index of the field to find. </param><exception cref="T:System.IndexOutOfRangeException">The index passed was outside the range of 0 through <see cref="P:System.Data.IDataRecord.FieldCount"/>. </exception><filterpriority>2</filterpriority>
        </member>
        <member name="M:System.Data.IDataRecord.GetDouble(System.Int32)">
            <summary>Gets the double-precision floating point number of the specified field.</summary><returns>The double-precision floating point number of the specified field.</returns><param name="i">The index of the field to find. </param><exception cref="T:System.IndexOutOfRangeException">The index passed was outside the range of 0 through <see cref="P:System.Data.IDataRecord.FieldCount"/>. </exception><filterpriority>2</filterpriority>
        </member>
        <member name="M:System.Data.IDataRecord.GetString(System.Int32)">
            <summary>Gets the string value of the specified field.</summary><returns>The string value of the specified field.</returns><param name="i">The index of the field to find. </param><exception cref="T:System.IndexOutOfRangeException">The index passed was outside the range of 0 through <see cref="P:System.Data.IDataRecord.FieldCount"/>. </exception><filterpriority>2</filterpriority>
        </member>
        <member name="M:System.Data.IDataRecord.GetDecimal(System.Int32)">
            <summary>Gets the fixed-position numeric value of the specified field.</summary><returns>The fixed-position numeric value of the specified field.</returns><param name="i">The index of the field to find. </param><exception cref="T:System.IndexOutOfRangeException">The index passed was outside the range of 0 through <see cref="P:System.Data.IDataRecord.FieldCount"/>. </exception><filterpriority>2</filterpriority>
        </member>
        <member name="M:System.Data.IDataRecord.GetDateTime(System.Int32)">
            <summary>Gets the date and time data value of the specified field.</summary><returns>The date and time data value of the specified field.</returns><param name="i">The index of the field to find. </param><exception cref="T:System.IndexOutOfRangeException">The index passed was outside the range of 0 through <see cref="P:System.Data.IDataRecord.FieldCount"/>. </exception><filterpriority>2</filterpriority>
        </member>
        <member name="M:System.Data.IDataRecord.GetData(System.Int32)">
            <summary>Returns an <see cref="T:System.Data.IDataReader"/> for the specified column ordinal.</summary><returns>The <see cref="T:System.Data.IDataReader"/> for the specified column ordinal.</returns><param name="i">The index of the field to find. </param><exception cref="T:System.IndexOutOfRangeException">The index passed was outside the range of 0 through <see cref="P:System.Data.IDataRecord.FieldCount"/>. </exception><filterpriority>2</filterpriority>
        </member>
        <member name="M:System.Data.IDataRecord.IsDBNull(System.Int32)">
            <summary>Return whether the specified field is set to null.</summary><returns>true if the specified field is set to null; otherwise, false.</returns><param name="i">The index of the field to find. </param><exception cref="T:System.IndexOutOfRangeException">The index passed was outside the range of 0 through <see cref="P:System.Data.IDataRecord.FieldCount"/>. </exception><filterpriority>2</filterpriority>
        </member>
        <member name="P:System.Data.IDataRecord.FieldCount">
            <summary>Gets the number of columns in the current row.</summary><returns>When not positioned in a valid recordset, 0; otherwise, the number of columns in the current record. The default is -1.</returns><filterpriority>2</filterpriority>
        </member>
        <member name="P:System.Data.IDataRecord.Item(System.Int32)">
            <summary>Gets the column located at the specified index.</summary><returns>The column located at the specified index as an <see cref="T:System.Object"/>.</returns><param name="i">The zero-based index of the column to get. </param><exception cref="T:System.IndexOutOfRangeException">The index passed was outside the range of 0 through <see cref="P:System.Data.IDataRecord.FieldCount"/>. </exception><filterpriority>2</filterpriority>
        </member>
        <member name="P:System.Data.IDataRecord.Item(System.String)">
            <summary>Gets the column with the specified name.</summary><returns>The column with the specified name as an <see cref="T:System.Object"/>.</returns><param name="name">The name of the column to find. </param><exception cref="T:System.IndexOutOfRangeException">No column with the specified name was found. </exception><filterpriority>2</filterpriority>
        </member>
        <member name="M:System.Data.IDataReader.Close">
            <summary>Closes the <see cref="T:System.Data.IDataReader"/> Object.</summary><filterpriority>2</filterpriority>
        </member>
        <member name="M:System.Data.IDataReader.GetSchemaTable">
            <summary>Returns a <see cref="T:System.Data.DataTable"/> that describes the column metadata of the <see cref="T:System.Data.IDataReader"/>.</summary><returns>A <see cref="T:System.Data.DataTable"/> that describes the column metadata.</returns><exception cref="T:System.InvalidOperationException">The <see cref="T:System.Data.IDataReader"/> is closed. </exception><filterpriority>2</filterpriority>
        </member>
        <member name="M:System.Data.IDataReader.NextResult">
            <summary>Advances the data reader to the next result, when reading the results of batch SQL statements.</summary><returns>true if there are more rows; otherwise, false.</returns><filterpriority>2</filterpriority>
        </member>
        <member name="M:System.Data.IDataReader.Read">
            <summary>Advances the <see cref="T:System.Data.IDataReader"/> to the next record.</summary><returns>true if there are more rows; otherwise, false.</returns><filterpriority>2</filterpriority>
        </member>
        <member name="P:System.Data.IDataReader.Depth">
            <summary>Gets a value indicating the depth of nesting for the current row.</summary><returns>The level of nesting.</returns><filterpriority>2</filterpriority>
        </member>
        <member name="P:System.Data.IDataReader.IsClosed">
            <summary>Gets a value indicating whether the data reader is closed.</summary><returns>true if the data reader is closed; otherwise, false.</returns><filterpriority>2</filterpriority>
        </member>
        <member name="P:System.Data.IDataReader.RecordsAffected">
            <summary>Gets the number of rows changed, inserted, or deleted by execution of the SQL statement.</summary><returns>The number of rows changed, inserted, or deleted; 0 if no rows were affected or the statement failed; and -1 for SELECT statements.</returns><filterpriority>2</filterpriority>
        </member>
        <member name="T:System.Diagnostics.Process">
            <summary>Provides access to local and remote processes and enables you to start and stop local system processes.</summary><filterpriority>1</filterpriority>
        </member>
        <member name="M:System.Diagnostics.Process.#ctor">
            <summary>Initializes a new instance of the <see cref="T:System.Diagnostics.Process"/> class.</summary>
        </member>
        <member name="M:System.Diagnostics.Process.GetCurrentProcess">
            <summary>Gets a new <see cref="T:System.Diagnostics.Process"/> component and associates it with the currently active process.</summary><returns>A new <see cref="T:System.Diagnostics.Process"/> component associated with the process resource that is running the calling application.</returns><filterpriority>1</filterpriority>
        </member>
        <member name="P:System.Diagnostics.Process.ProcessorAffinity">
            <summary>Gets or sets the processors on which the threads in this process can be scheduled to run.</summary><returns>A bitmask representing the processors that the threads in the associated process can run on. The default depends on the number of processors on the computer. The default value is 2 n -1, where n is the number of processors.</returns><exception cref="T:System.ComponentModel.Win32Exception">
        <see cref="P:System.Diagnostics.Process.ProcessorAffinity"/> information could not be set or retrieved from the associated process resource.-or- The process identifier or process handle is zero. (The process has not been started.) </exception><exception cref="T:System.NotSupportedException">You are attempting to access the <see cref="P:System.Diagnostics.Process.ProcessorAffinity"/> property for a process that is running on a remote computer. This property is available only for processes that are running on the local computer. </exception><exception cref="T:System.InvalidOperationException">The process <see cref="P:System.Diagnostics.Process.Id"/> was not available.-or- The process has exited. </exception><filterpriority>2</filterpriority>
        </member>
        <member name="T:System.Diagnostics.Trace">
            <summary>Provides a set of methods and properties that help you trace the execution of your code. This class cannot be inherited.</summary><filterpriority>1</filterpriority>
        </member>
        <member name="M:System.Diagnostics.Trace.Write(System.String)">
            <summary>Writes a message to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners"/> collection.</summary><param name="message">A message to write. </param><filterpriority>1</filterpriority><PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true"/>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence"/>
      </PermissionSet>
        </member>
        <member name="M:System.Diagnostics.Trace.WriteLine(System.String)">
            <summary>Writes a message to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners"/> collection.</summary><param name="message">A message to write. </param><filterpriority>1</filterpriority><PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true"/>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence"/>
      </PermissionSet>
        </member>
        <member name="M:System.Diagnostics.Trace.TraceWarning(System.String)">
            <summary>Writes a warning message to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners"/> collection using the specified message.</summary><param name="message">The informative message to write.</param><filterpriority>1</filterpriority><PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true"/>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true"/>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence"/>
      </PermissionSet>
        </member>
        <member name="M:System.Diagnostics.Trace.TraceInformation(System.String,System.Object[])">
            <summary>Writes an informational message to the trace listeners in the <see cref="P:System.Diagnostics.Trace.Listeners"/> collection using the specified array of objects and formatting information.</summary><param name="format">A format string that contains zero or more format items, which correspond to objects in the <paramref name="args"/> array.</param><param name="args">An object array containing zero or more objects to format.</param><filterpriority>1</filterpriority><PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true"/>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true"/>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence"/>
      </PermissionSet>
        </member>
        <member name="M:System.Diagnostics.Trace.Assert(System.Boolean)">
            <summary>Checks for a condition; if the condition is false, displays a message box that shows the call stack.</summary><param name="condition">The conditional expression to evaluate. If the condition is true, a failure message is not sent and the message box is not displayed.</param><filterpriority>2</filterpriority><PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true"/>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence"/>
      </PermissionSet>
        </member>
        <member name="T:System.ICloneable">
            <summary>Supports cloning, which creates a new instance of a class with the same value as an existing instance.</summary><filterpriority>2</filterpriority>
        </member>
        <member name="M:System.ICloneable.Clone">
            <summary>Creates a new object that is a copy of the current instance.</summary><returns>A new object that is a copy of this instance.</returns><filterpriority>2</filterpriority>
        </member>
        <member name="T:System.IO.BinaryReaderExtensions">
            <summary>
            Shim complement for the <see cref="T:System.IO.BinaryReader"/> class. <see cref="T:System.IO.BinaryReader"/> instance methods that are not available in the 
            PCL profile are here provided as equivalent extension methods.
            </summary>
        </member>
        <member name="M:System.IO.BinaryReaderExtensions.Close(System.IO.BinaryReader)">
            <summary>Closes the current reader and the underlying stream.</summary><filterpriority>2</filterpriority>
            <param name="reader">Binary reader to be closed.</param>
        </member>
        <member name="T:System.IO.BinaryWriterExtensions">
            <summary>
            Shim complement for the <see cref="T:System.IO.BinaryWriter"/> class. <see cref="T:System.IO.BinaryWriter"/> instance methods that are not available in the 
            PCL profile are here provided as equivalent extension methods.
            </summary>
        </member>
        <member name="M:System.IO.BinaryWriterExtensions.Close(System.IO.BinaryWriter)">
            <summary>Closes the current <see cref="T:System.IO.BinaryWriter"/> and the underlying stream.</summary><filterpriority>1</filterpriority>
            <param name="writer">Binary writer to be closed.</param>
        </member>
        <member name="T:System.IO.SearchOption">
            <summary>Specifies whether to search the current directory, or the current directory and all subdirectories. </summary>
        </member>
        <member name="F:System.IO.SearchOption.TopDirectoryOnly">
            <summary>Includes only the current directory in a search operation.</summary>
        </member>
        <member name="F:System.IO.SearchOption.AllDirectories">
            <summary>Includes the current directory and all its subdirectories in a search operation. This option includes reparse points such as mounted drives and symbolic links in the search.</summary>
        </member>
        <member name="T:System.IO.ShimPath">
            <summary>
            Shim complement for the <see cref="T:System.IO.Path"/> class, providing members that are
            not included in the PCL member subset of the <see cref="T:System.IO.Path"/> class.
            </summary>
        </member>
        <member name="F:System.IO.ShimPath.PathSeparator">
            <summary>A platform-specific separator character used to separate path strings in environment variables.</summary><filterpriority>1</filterpriority>
        </member>
        <member name="F:System.IO.ShimPath.DirectorySeparatorChar">
            <summary>Provides a platform-specific character used to separate directory levels in a path string that reflects a hierarchical file system organization.</summary><filterpriority>1</filterpriority>
        </member>
        <member name="M:System.IO.ShimPath.GetTempPath">
            <summary>Returns the path of the current user's temporary folder.</summary><returns>The path to the temporary folder, ending with a backslash.</returns><exception cref="T:System.Security.SecurityException">The caller does not have the required permissions. </exception><filterpriority>1</filterpriority><PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true"/>
      </PermissionSet>
        </member>
        <member name="M:System.IO.ShimPath.GetTempFileName">
            <summary>Creates a uniquely named, zero-byte temporary file on disk and returns the full path of that file.</summary><returns>The full path of the temporary file.</returns><exception cref="T:System.IO.IOException">An I/O error occurs, such as no unique temporary file name is available.- or -This method was unable to create a temporary file.</exception><filterpriority>1</filterpriority><PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true"/>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true"/>
      </PermissionSet>
        </member>
        <member name="M:System.IO.ShimPath.GetFullPath(System.String)">
            <summary>Returns the absolute path for the specified path string.</summary><returns>The fully qualified location of <paramref name="path"/>, such as "C:\MyFile.txt".</returns><param name="path">The file or directory for which to obtain absolute path information. </param><exception cref="T:System.ArgumentException">
        <paramref name="path"/> is a zero-length string, contains only white space, or contains one or more of the invalid characters defined in <see cref="M:System.IO.Path.GetInvalidPathChars"/>.-or- The system could not retrieve the absolute path. </exception><exception cref="T:System.Security.SecurityException">The caller does not have the required permissions. </exception><exception cref="T:System.ArgumentNullException">
        <paramref name="path"/> is null. </exception><exception cref="T:System.NotSupportedException">
        <paramref name="path"/> contains a colon (":") that is not part of a volume identifier (for example, "c:\"). </exception><exception cref="T:System.IO.PathTooLongException">The specified path, file name, or both exceed the system-defined maximum length. For example, on Windows-based platforms, paths must be less than 248 characters, and file names must be less than 260 characters. </exception><filterpriority>1</filterpriority><PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" PathDiscovery="*AllFiles*"/>
      </PermissionSet>
        </member>
        <member name="M:System.IO.ShimPath.Combine(System.String[])">
            <summary>Combines an array of strings into a path.</summary><returns>The combined paths.</returns><param name="paths">An array of parts of the path.</param><exception cref="T:System.ArgumentException">One of the strings in the array contains one or more of the invalid characters defined in <see cref="M:System.IO.Path.GetInvalidPathChars"/>. </exception><exception cref="T:System.ArgumentNullException">One of the strings in the array is null. </exception>
        </member>
        <member name="T:System.IO.StreamExtensions">
            <summary>
            Shim complement for the <see cref="T:System.IO.Stream"/> class. <see cref="T:System.IO.Stream"/> instance methods that are not available in the 
            PCL profile are here provided as equivalent extension methods.
            </summary>
        </member>
        <member name="M:System.IO.StreamExtensions.Close(System.IO.Stream)">
            <summary>Closes the current stream and releases any resources (such as sockets and file handles) associated with the current stream. Instead of calling this method, ensure that the stream is properly disposed.</summary><filterpriority>1</filterpriority>
            <param name="stream">Stream to be closed.</param>
        </member>
        <member name="M:System.IO.StreamExtensions.BeginWrite(System.IO.Stream,System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
            <summary>Begins an asynchronous write operation. (Consider using <see cref="M:System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)"/> instead; see the Remarks section.)</summary><returns>An IAsyncResult that represents the asynchronous write, which could still be pending.</returns><param name="buffer">The buffer to write data from. </param><param name="offset">The byte offset in <paramref name="buffer"/> from which to begin writing. </param><param name="count">The maximum number of bytes to write. </param><param name="callback">An optional asynchronous callback, to be called when the write is complete. </param><param name="state">A user-provided object that distinguishes this particular asynchronous write request from other requests. </param><exception cref="T:System.IO.IOException">Attempted an asynchronous write past the end of the stream, or a disk error occurs. </exception><exception cref="T:System.ArgumentException">One or more of the arguments is invalid. </exception><exception cref="T:System.ObjectDisposedException">Methods were called after the stream was closed. </exception><exception cref="T:System.NotSupportedException">The current Stream implementation does not support the write operation. </exception><filterpriority>2</filterpriority>
            <param name="stream">Stream on which to begin writing.</param>
        </member>
        <member name="M:System.IO.StreamExtensions.EndWrite(System.IO.Stream,System.IAsyncResult)">
            <summary>Ends an asynchronous write operation. (Consider using <see cref="M:System.IO.Stream.WriteAsync(System.Byte[],System.Int32,System.Int32)"/> instead; see the Remarks section.)</summary><param name="asyncResult">A reference to the outstanding asynchronous I/O request. </param><exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult"/> is null. </exception><exception cref="T:System.ArgumentException">A handle to the pending write operation is not available.-or-The pending operation does not support writing.</exception><exception cref="T:System.InvalidOperationException">
        <paramref name="asyncResult"/> did not originate from a <see cref="M:System.IO.Stream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)"/> method on the current stream.</exception><exception cref="T:System.IO.IOException">The stream is closed or an internal error has occurred.</exception><filterpriority>2</filterpriority>
            <param name="stream">Stream on which to end writing.</param>
        </member>
        <member name="M:System.IO.StreamExtensions.BeginRead(System.IO.Stream,System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
            <summary>Begins an asynchronous read operation. (Consider using <see cref="M:System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)"/> instead; see the Remarks section.)</summary><returns>An <see cref="T:System.IAsyncResult"/> that represents the asynchronous read, which could still be pending.</returns><param name="buffer">The buffer to read the data into. </param><param name="offset">The byte offset in <paramref name="buffer"/> at which to begin writing data read from the stream. </param><param name="count">The maximum number of bytes to read. </param><param name="callback">An optional asynchronous callback, to be called when the read is complete. </param><param name="state">A user-provided object that distinguishes this particular asynchronous read request from other requests. </param><exception cref="T:System.IO.IOException">Attempted an asynchronous read past the end of the stream, or a disk error occurs. </exception><exception cref="T:System.ArgumentException">One or more of the arguments is invalid. </exception><exception cref="T:System.ObjectDisposedException">Methods were called after the stream was closed. </exception><exception cref="T:System.NotSupportedException">The current Stream implementation does not support the read operation. </exception><filterpriority>2</filterpriority>
            <param name="stream">Stream on which to begin reading.</param>
        </member>
        <member name="M:System.IO.StreamExtensions.EndRead(System.IO.Stream,System.IAsyncResult)">
            <summary>Waits for the pending asynchronous read to complete. (Consider using <see cref="M:System.IO.Stream.ReadAsync(System.Byte[],System.Int32,System.Int32)"/> instead; see the Remarks section.)</summary><returns>The number of bytes read from the stream, between zero (0) and the number of bytes you requested. Streams return zero (0) only at the end of the stream, otherwise, they should block until at least one byte is available.</returns><param name="asyncResult">The reference to the pending asynchronous request to finish. </param><exception cref="T:System.ArgumentNullException">
        <paramref name="asyncResult"/> is null. </exception><exception cref="T:System.ArgumentException">A handle to the pending read operation is not available.-or-The pending operation does not support reading.</exception><exception cref="T:System.InvalidOperationException">
        <paramref name="asyncResult"/> did not originate from a <see cref="M:System.IO.Stream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)"/> method on the current stream.</exception><exception cref="T:System.IO.IOException">The stream is closed or an internal error has occurred.</exception><filterpriority>2</filterpriority>
            <param name="stream">Stream on which to end reading.</param>
        </member>
        <member name="T:System.IO.TextReaderExtensions">
            <summary>
            Shim complement for the <see cref="T:System.IO.TextReader"/> class. <see cref="T:System.IO.TextReader"/> instance methods that are not available in the 
            PCL profile are here provided as equivalent extension methods.
            </summary>
        </member>
        <member name="M:System.IO.TextReaderExtensions.Close(System.IO.TextReader)">
            <summary>Closes the <see cref="T:System.IO.TextReader"/> and releases any system resources associated with the TextReader.</summary><filterpriority>1</filterpriority>
            <param name="reader">Text reader to be closed.</param>
        </member>
        <member name="T:System.IO.TextWriterExtensions">
            <summary>
            Shim complement for the <see cref="T:System.IO.TextWriter"/> class. <see cref="T:System.IO.TextWriter"/> instance methods that are not available in the 
            PCL profile are here provided as equivalent extension methods.
            </summary>
        </member>
        <member name="M:System.IO.TextWriterExtensions.Close(System.IO.TextWriter)">
            <summary>Closes the current writer and releases any system resources associated with the writer.</summary><filterpriority>1</filterpriority>
            <param name="writer">Text writer to be closed.</param>
        </member>
        <member name="T:System.Net.HttpWebRequestExtensions">
            <summary>
            Shim complement for the <see cref="T:System.Net.HttpWebRequest"/> class. <see cref="T:System.Net.HttpWebRequest"/> instance properties that are not available in the 
            PCL profile are here provided as equivalent extension methods (since extension properties is not available in C#).
            </summary>
        </member>
        <member name="M:System.Net.HttpWebRequestExtensions.SetUserAgent(System.Net.HttpWebRequest,System.String)">
            <summary>Gets or sets the value of the User-agent HTTP header.</summary><returns>The value of the User-agent HTTP header. The default value is null.NoteThe value for this property is stored in <see cref="T:System.Net.WebHeaderCollection"/>. If WebHeaderCollection is set, the property value is lost.</returns>
            <param name="request">HTTP web request object on which to set user agent.</param>
            <param name="userAgent">User agent value to set.</param>
        </member>
        <member name="T:System.Net.WebRequestExtensions">
            <summary>
            Shim complement for the <see cref="T:System.Net.WebRequest"/> class. <see cref="T:System.Net.WebRequest"/> instance properties and methods that are not available in the 
            PCL profile are here provided as equivalent extension methods (since extension properties is not available in C#).
            </summary>
        </member>
        <member name="M:System.Net.WebRequestExtensions.GetResponse(System.Net.WebRequest)">
            <summary>When overridden in a descendant class, returns a response to an Internet request.</summary><returns>A <see cref="T:System.Net.WebResponse"/> containing the response to the Internet request.</returns><exception cref="T:System.NotImplementedException">Any attempt is made to access the method, when the method is not overridden in a descendant class. </exception><PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence"/>
      </PermissionSet>
            <param name="request">HTTP web request object on which to get response.</param>
        </member>
        <member name="M:System.Net.WebRequestExtensions.GetRequestStream(System.Net.WebRequest)">
            <summary>When overridden in a descendant class, returns a <see cref="T:System.IO.Stream"/> for writing data to the Internet resource.</summary><returns>A <see cref="T:System.IO.Stream"/> for writing data to the Internet resource.</returns><exception cref="T:System.NotImplementedException">Any attempt is made to access the method, when the method is not overridden in a descendant class. </exception><PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence"/>
      </PermissionSet>
            <param name="request">HTTP web request object on which to get request stream.</param>
        </member>
        <member name="M:System.Net.WebRequestExtensions.SetConnectionGroupName(System.Net.WebRequest,System.String)">
            <summary>When overridden in a descendant class, gets or sets the name of the connection group for the request.</summary><returns>The name of the connection group for the request.</returns><exception cref="T:System.NotImplementedException">Any attempt is made to get or set the property, when the property is not overridden in a descendant class. </exception><PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence"/>
      </PermissionSet>
            <param name="request">HTTP web request object on which to set connection group name.</param>
            <param name="groupName">Connection group name value to set.</param>
        </member>
        <member name="M:System.Net.WebRequestExtensions.SetProxy(System.Net.WebRequest,System.Net.IWebProxy)">
            <summary>When overridden in a descendant class, gets or sets the network proxy to use to access this Internet resource.</summary><returns>The <see cref="T:System.Net.IWebProxy"/> to use to access the Internet resource.</returns><exception cref="T:System.NotImplementedException">Any attempt is made to get or set the property, when the property is not overridden in a descendant class. </exception><PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence"/>
      </PermissionSet>
            <param name="request">HTTP web request object on which to set proxy.</param>
            <param name="proxy">Web proxy value to set.</param>
        </member>
        <member name="M:System.Net.WebRequestExtensions.SetTimeout(System.Net.WebRequest,System.Int32)">
            <summary>Gets or sets the length of time, in milliseconds, before the request times out.</summary><returns>The length of time, in milliseconds, until the request times out, or the value <see cref="F:System.Threading.Timeout.Infinite"/> to indicate that the request does not time out. The default value is defined by the descendant class.</returns><exception cref="T:System.NotImplementedException">Any attempt is made to get or set the property, when the property is not overridden in a descendant class. </exception><PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence"/>
      </PermissionSet>
            <param name="request">HTTP web request object on which to set timeout.</param>
            <param name="timeout">Timeout value to set.</param>
        </member>
        <member name="M:System.Net.WebRequestExtensions.SetContentLength(System.Net.WebRequest,System.Int64)">
            <summary>When overridden in a descendant class, gets or sets the content length of the request data being sent.</summary><returns>The number of bytes of request data being sent.</returns><exception cref="T:System.NotImplementedException">Any attempt is made to get or set the property, when the property is not overridden in a descendant class. </exception><PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence"/>
      </PermissionSet>
            <param name="request">HTTP web request object on which to set content length.</param>
            <param name="contentLength">Content length value to set.</param>
        </member>
        <member name="T:System.Net.IWebProxy">
            <summary>Provides the base interface for implementation of proxy access for the <see cref="T:System.Net.WebRequest"/> class.</summary>
        </member>
        <member name="T:System.Net.Security.SslPolicyErrors">
            <summary>Enumerates Secure Socket Layer (SSL) policy errors.</summary>
        </member>
        <member name="F:System.Net.Security.SslPolicyErrors.None">
            <summary>No SSL policy errors.</summary>
        </member>
        <member name="T:System.Net.WebResponseExtensions">
            <summary>
            Shim complement for the <see cref="T:System.Net.WebResponse"/> class. <see cref="T:System.Net.WebResponse"/> instance methods that are not available in the 
            PCL profile are here provided as equivalent extension methods.
            </summary>
        </member>
        <member name="M:System.Net.WebResponseExtensions.Close(System.Net.WebResponse)">
            <summary>When overridden by a descendant class, closes the response stream.</summary><exception cref="T:System.NotSupportedException">Any attempt is made to access the method, when the method is not overridden in a descendant class. </exception><PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence"/>
      </PermissionSet>
            <param name="webResponse">HTTP web response object to close.</param>
        </member>
        <member name="T:System.NonSerializedAttribute">
            <summary>Indicates that a field of a serializable class should not be serialized. This class cannot be inherited.</summary><filterpriority>1</filterpriority>
        </member>
        <member name="T:System.NotFiniteNumberException">
            <summary>The exception that is thrown when a floating-point value is positive infinity, negative infinity, or Not-a-Number (NaN).</summary><filterpriority>2</filterpriority>
        </member>
        <member name="M:System.NotFiniteNumberException.#ctor(System.String,System.Double)">
            <summary>Initializes a new instance of the <see cref="T:System.NotFiniteNumberException"/> class with a specified error message and the invalid number.</summary><param name="message">The message that describes the error. </param><param name="offendingNumber">The value of the argument that caused the exception. </param>
        </member>
        <member name="T:System.Reflection.AssemblyExtensions">
            <summary>
            Shim complement for the <see cref="T:System.Reflection.Assembly"/> class. <see cref="T:System.Reflection.Assembly"/> instance methods that are not available in the 
            PCL profile are here provided as equivalent extension methods.
            </summary>
        </member>
        <member name="M:System.Reflection.AssemblyExtensions.CreateInstance(System.Reflection.Assembly,System.String)">
            <summary>Locates the specified type from this assembly and creates an instance of it using the system activator, using case-sensitive search.</summary><returns>An instance of the specified type created with the default constructor; or null if <paramref name="typeName"/> is not found. The type is resolved using the default binder, without specifying culture or activation attributes, and with <see cref="T:System.Reflection.BindingFlags"/> set to Public or Instance. </returns><param name="typeName">The <see cref="P:System.Type.FullName"/> of the type to locate. </param><exception cref="T:System.ArgumentException">
        <paramref name="typeName"/> is an empty string ("") or a string beginning with a null character.-or-The current assembly was loaded into the reflection-only context.</exception><exception cref="T:System.ArgumentNullException">
        <paramref name="typeName"/> is null. </exception><exception cref="T:System.MissingMethodException">No matching constructor was found. </exception><exception cref="T:System.IO.FileNotFoundException">
        <paramref name="typeName"/> requires a dependent assembly that could not be found. </exception><exception cref="T:System.IO.FileLoadException">
        <paramref name="typeName"/> requires a dependent assembly that was found but could not be loaded.-or-The current assembly was loaded into the reflection-only context, and <paramref name="typeName"/> requires a dependent assembly that was not preloaded. </exception><exception cref="T:System.BadImageFormatException">
        <paramref name="typeName"/> requires a dependent assembly, but the file is not a valid assembly. -or-<paramref name="typeName"/> requires a dependent assembly which was compiled for a version of the runtime later than the currently loaded version.</exception><PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess"/>
      </PermissionSet>
            <param name="assembly">Assembly on which the <paramref name="typeName"/> instance should be created.</param>
        </member>
        <member name="T:System.Reflection.ShimAssembly">
            <summary>
            Shim complement for the <see cref="T:System.Reflection.Assembly"/> class, providing static members that are
            not included in the PCL member subset of the <see cref="T:System.Reflection.Assembly"/> class.
            </summary>
        </member>
        <member name="M:System.Reflection.ShimAssembly.GetExecutingAssembly">
            <summary>Gets the assembly that contains the code that is currently executing.</summary><returns>The assembly that contains the code that is currently executing. </returns>
        </member>
        <member name="T:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter">
            <summary>Serializes and deserializes an object, or an entire graph of connected objects, in binary format.</summary>
        </member>
        <member name="M:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.Deserialize(System.IO.Stream)">
            <summary>Deserializes the specified stream into an object graph.</summary><returns>The top (root) of the object graph.</returns><param name="serializationStream">The stream from which to deserialize the object graph. </param><exception cref="T:System.ArgumentNullException">The <paramref name="serializationStream"/> is null. </exception><exception cref="T:System.Runtime.Serialization.SerializationException">The <paramref name="serializationStream"/> supports seeking, but its length is 0. -or-The target type is a <see cref="T:System.Decimal"/>, but the value is out of range of the <see cref="T:System.Decimal"/> type.</exception><exception cref="T:System.Security.SecurityException">The caller does not have the required permission. </exception><PermissionSet>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Read="*AllFiles*" PathDiscovery="*AllFiles*"/>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess"/>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="ControlEvidence"/>
      </PermissionSet>
        </member>
        <member name="M:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter.Serialize(System.IO.Stream,System.Object)">
            <summary>Serializes the object, or graph of objects with the specified top (root), to the given stream.</summary><param name="serializationStream">The stream to which the graph is to be serialized. </param><param name="graph">The object at the root of the graph to serialize. </param><exception cref="T:System.ArgumentNullException">The <paramref name="serializationStream"/> is null. -or-The <paramref name="graph"/> is null.</exception><exception cref="T:System.Runtime.Serialization.SerializationException">An error has occurred during serialization, such as if an object in the <paramref name="graph"/> parameter is not marked as serializable. </exception><exception cref="T:System.Security.SecurityException">The caller does not have the required permission. </exception><PermissionSet>
        <IPermission class="System.Security.Permissions.ReflectionPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="MemberAccess"/>
      </PermissionSet>
        </member>
        <member name="T:System.Runtime.Serialization.ISerializable">
            <summary>Allows an object to control its own serialization and deserialization.</summary>
        </member>
        <member name="M:System.Runtime.Serialization.ISerializable.GetObjectData(System.Runtime.Serialization.SerializationInfo,System.Runtime.Serialization.StreamingContext)">
            <summary>Populates a <see cref="T:System.Runtime.Serialization.SerializationInfo"/> with the data needed to serialize the target object.</summary><param name="info">The <see cref="T:System.Runtime.Serialization.SerializationInfo"/> to populate with data. </param><param name="context">The destination (see <see cref="T:System.Runtime.Serialization.StreamingContext"/>) for this serialization. </param><exception cref="T:System.Security.SecurityException">The caller does not have the required permission. </exception>
        </member>
        <member name="T:System.Runtime.Serialization.OptionalFieldAttribute">
            <summary>Specifies that a field can be missing from a serialization stream so that the <see cref="T:System.Runtime.Serialization.Formatters.Binary.BinaryFormatter"/> and the <see cref="T:System.Runtime.Serialization.Formatters.Soap.SoapFormatter"/> does not throw an exception. </summary>
        </member>
        <member name="T:System.Runtime.Serialization.SerializationInfo">
            <summary>Stores all the data needed to serialize or deserialize an object. This class cannot be inherited.</summary>
        </member>
        <member name="M:System.Runtime.Serialization.SerializationInfo.AddValue(System.String,System.Double)">
            <summary>Adds a double-precision floating-point value into the <see cref="T:System.Runtime.Serialization.SerializationInfo"/> store.</summary><param name="name">The name to associate with the value, so it can be deserialized later. </param><param name="value">The double value to serialize. </param><exception cref="T:System.ArgumentNullException">The <paramref name="name"/> parameter is null. </exception><exception cref="T:System.Runtime.Serialization.SerializationException">A value has already been associated with <paramref name="name"/>. </exception>
        </member>
        <member name="T:System.Security.Authentication.SslProtocols">
            <summary>Defines the possible versions of <see cref="T:System.Security.Authentication.SslProtocols"/>.</summary>
        </member>
        <member name="F:System.Security.Authentication.SslProtocols.Tls">
            <summary>Specifies the TLS 1.0 security protocol. The TLS protocol is defined in IETF RFC 2246.</summary>
        </member>
        <member name="T:System.Security.Cryptography.X509Certificates.OpenFlags">
            <summary>Specifies the way to open the X.509 certificate store.</summary>
        </member>
        <member name="F:System.Security.Cryptography.X509Certificates.OpenFlags.ReadOnly">
            <summary>Open the X.509 certificate store for reading only.</summary>
        </member>
        <member name="T:System.Security.Cryptography.X509Certificates.StoreLocation">
            <summary>Specifies the location of the X.509 certificate store.</summary>
        </member>
        <member name="F:System.Security.Cryptography.X509Certificates.StoreLocation.LocalMachine">
            <summary>The X.509 certificate store assigned to the local machine.</summary>
        </member>
        <member name="T:System.Security.Cryptography.X509Certificates.StoreName">
            <summary>Specifies the name of the X.509 certificate store to open.</summary>
        </member>
        <member name="F:System.Security.Cryptography.X509Certificates.StoreName.My">
            <summary>The X.509 certificate store for personal certificates.</summary>
        </member>
        <member name="T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection">
            <summary>Represents a collection of <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2"/> objects. This class cannot be inherited.</summary>
        </member>
        <member name="M:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Find(System.Security.Cryptography.X509Certificates.X509FindType,System.Object,System.Boolean)">
            <summary>Searches an <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection"/> object using the search criteria specified by the <see cref="T:System.Security.Cryptography.X509Certificates.X509FindType"/> enumeration and the <paramref name="findValue"/> object.</summary><returns>An <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2Collection"/> object.</returns><param name="findType">One of the <see cref="T:System.Security.Cryptography.X509Certificates.X509FindType"/>  values. </param><param name="findValue">The search criteria as an object. </param><param name="validOnly">true to allow only valid certificates to be returned from the search; otherwise, false. </param><exception cref="T:System.Security.Cryptography.CryptographicException">
        <paramref name="findType"/> is invalid. </exception>
        </member>
        <member name="T:System.Security.Cryptography.X509Certificates.X509Chain">
            <summary>Represents a chain-building engine for <see cref="T:System.Security.Cryptography.X509Certificates.X509Certificate2"/> certificates.</summary>
        </member>
        <member name="T:System.Security.Cryptography.X509Certificates.X509FindType">
            <summary>Specifies the type of value the <see cref="M:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Find(System.Security.Cryptography.X509Certificates.X509FindType,System.Object,System.Boolean)"/> method searches for.</summary>
        </member>
        <member name="F:System.Security.Cryptography.X509Certificates.X509FindType.FindBySubjectName">
            <summary>The <paramref name="findValue"/> parameter for the <see cref="M:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Find(System.Security.Cryptography.X509Certificates.X509FindType,System.Object,System.Boolean)"/> method must be a string representing the subject name of the certificate. This is a less specific search than that provided by the <see cref="F:System.Security.Cryptography.X509Certificates.X509FindType.FindBySubjectDistinguishedName"/> enumeration value. Using the <see cref="F:System.Security.Cryptography.X509Certificates.X509FindType.FindBySubjectName"/> value, the <see cref="M:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Find(System.Security.Cryptography.X509Certificates.X509FindType,System.Object,System.Boolean)"/> method performs a case-insensitive string comparison using the supplied value. For example, if you pass "MyCert" to the <see cref="M:System.Security.Cryptography.X509Certificates.X509Certificate2Collection.Find(System.Security.Cryptography.X509Certificates.X509FindType,System.Object,System.Boolean)"/> method, it will find all certificates with the subject name containing that string, regardless of other subject values. Searching by distinguished name is a more precise search.</summary>
        </member>
        <member name="T:System.Security.Cryptography.X509Certificates.X509Store">
            <summary>Represents an X.509 store, which is a physical store where certificates are persisted and managed. This class cannot be inherited.</summary>
        </member>
        <member name="M:System.Security.Cryptography.X509Certificates.X509Store.#ctor(System.Security.Cryptography.X509Certificates.StoreName,System.Security.Cryptography.X509Certificates.StoreLocation)">
            <summary>Initializes a new instance of the <see cref="T:System.Security.Cryptography.X509Certificates.X509Store"/> class using the specified <see cref="T:System.Security.Cryptography.X509Certificates.StoreName"/> and <see cref="T:System.Security.Cryptography.X509Certificates.StoreLocation"/> values.</summary><param name="storeName">One of the enumeration values that specifies the name of the X.509 certificate store. </param><param name="storeLocation">One of the enumeration values that specifies the location of the X.509 certificate store. </param><exception cref="T:System.ArgumentException">
        <paramref name="storeLocation"/> is not a valid location or <paramref name="storeName"/> is not a valid name. </exception>
        </member>
        <member name="M:System.Security.Cryptography.X509Certificates.X509Store.Open(System.Security.Cryptography.X509Certificates.OpenFlags)">
            <summary>Opens an X.509 certificate store or creates a new store, depending on <see cref="T:System.Security.Cryptography.X509Certificates.OpenFlags"/> flag settings.</summary><param name="flags">A bitwise combination of enumeration values that specifies the way to open the X.509 certificate store. </param><exception cref="T:System.Security.Cryptography.CryptographicException">The store is unreadable. </exception><exception cref="T:System.Security.SecurityException">The caller does not have the required permission. </exception><exception cref="T:System.ArgumentException">The store contains invalid values.</exception>
        </member>
        <member name="M:System.Security.Cryptography.X509Certificates.X509Store.Close">
            <summary>Closes an X.509 certificate store.</summary>
        </member>
        <member name="P:System.Security.Cryptography.X509Certificates.X509Store.Certificates">
            <summary>Returns a collection of certificates located in an X.509 certificate store.</summary><returns>A collection of certificates.</returns>
        </member>
        <member name="T:System.SerializableAttribute">
            <summary>Indicates that a class can be serialized. This class cannot be inherited.</summary><filterpriority>1</filterpriority>
        </member>
        <member name="T:System.Threading.Tasks.Parallel">
            <summary>Provides support for parallel loops and regions.</summary>
        </member>
        <member name="M:System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Action{System.Int32})">
            <summary>Executes a for (For in Visual Basic) loop in which iterations may run in parallel.</summary><returns>A structure that contains information about which portion of the loop completed.</returns><param name="fromInclusive">The start index, inclusive.</param><param name="toExclusive">The end index, exclusive.</param><param name="body">The delegate that is invoked once per iteration.</param><exception cref="T:System.ArgumentNullException">The <paramref name="body"/> argument is null.</exception><exception cref="T:System.AggregateException">The exception that contains all the individual exceptions thrown on all threads.</exception>
        </member>
        <member name="M:System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Action{System.Int32,System.Threading.Tasks.ParallelLoopState})">
            <summary>Executes a for (For in Visual Basic) loop in which iterations may run in parallel and the state of the loop can be monitored and manipulated. </summary><returns>A  structure that contains information about which portion of the loop completed.</returns><param name="fromInclusive">The start index, inclusive.</param><param name="toExclusive">The end index, exclusive.</param><param name="body">The delegate that is invoked once per iteration.</param><exception cref="T:System.ArgumentNullException">The <paramref name="body"/> argument is null.</exception><exception cref="T:System.AggregateException">The exception that contains all the individual exceptions thrown on all threads.</exception>
        </member>
        <member name="M:System.Threading.Tasks.Parallel.For(System.Int32,System.Int32,System.Threading.Tasks.ParallelOptions,System.Action{System.Int32})">
            <summary>Executes a for (For in Visual Basic) loop in which iterations may run in parallel and loop options can be configured.</summary><returns>A  structure that contains information about which portion of the loop completed.</returns><param name="fromInclusive">The start index, inclusive.</param><param name="toExclusive">The end index, exclusive.</param><param name="parallelOptions">An object that configures the behavior of this operation.</param><param name="body">The delegate that is invoked once per iteration.</param><exception cref="T:System.OperationCanceledException">The <see cref="T:System.Threading.CancellationToken"/> in the <paramref name="parallelOptions"/> argument is canceled.</exception><exception cref="T:System.ArgumentNullException">The <paramref name="body"/> argument is null.-or-The <paramref name="parallelOptions"/> argument is null.</exception><exception cref="T:System.AggregateException">The exception that contains all the individual exceptions thrown on all threads.</exception><exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Threading.CancellationTokenSource"/> associated with the <see cref="T:System.Threading.CancellationToken"/> in the <paramref name="parallelOptions"/> has been disposed.</exception>
        </member>
        <member name="M:System.Threading.Tasks.Parallel.For``1(System.Int32,System.Int32,System.Func{``0},System.Func{System.Int32,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
            <summary>Executes a for (For in Visual Basic) loop with thread-local data in which iterations may run in parallel, and the state of the loop can be monitored and manipulated.</summary><returns>A  structure that contains information about which portion of the loop completed.</returns><param name="fromInclusive">The start index, inclusive.</param><param name="toExclusive">The end index, exclusive.</param><param name="localInit">The function delegate that returns the initial state of the local data for each task.</param><param name="body">The delegate that is invoked once per iteration.</param><param name="localFinally">The delegate that performs a final action on the local state of each task.</param><typeparam name="TLocal">The type of the thread-local data.</typeparam><exception cref="T:System.ArgumentNullException">The <paramref name="body"/> argument is null.-or-The <paramref name="localInit"/> argument is null.-or-The <paramref name="localFinally"/> argument is null.</exception><exception cref="T:System.AggregateException">The exception that contains all the individual exceptions thrown on all threads.</exception>
        </member>
        <member name="M:System.Threading.Tasks.Parallel.For``1(System.Int32,System.Int32,System.Threading.Tasks.ParallelOptions,System.Func{``0},System.Func{System.Int32,System.Threading.Tasks.ParallelLoopState,``0,``0},System.Action{``0})">
            <summary>Executes a for (For in Visual Basic)  loop with thread-local data in which iterations may run in parallel, loop options can be configured, and the state of the loop can be monitored and manipulated.</summary><returns>A structure that contains information about which portion of the loop completed.</returns><param name="fromInclusive">The start index, inclusive.</param><param name="toExclusive">The end index, exclusive.</param><param name="parallelOptions">An object that configures the behavior of this operation.</param><param name="localInit">The function delegate that returns the initial state of the local data for each task.</param><param name="body">The delegate that is invoked once per iteration.</param><param name="localFinally">The delegate that performs a final action on the local state of each task.</param><typeparam name="TLocal">The type of the thread-local data.</typeparam><exception cref="T:System.ArgumentNullException">The <paramref name="body"/> argument is null.-or-The <paramref name="localInit"/> argument is null.-or-The <paramref name="localFinally"/> argument is null.-or-The <paramref name="parallelOptions"/> argument is null.</exception><exception cref="T:System.OperationCanceledException">The <see cref="T:System.Threading.CancellationToken"/> in the <paramref name="parallelOptions"/> argument is canceled.</exception><exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Threading.CancellationTokenSource"/> associated with the <see cref="T:System.Threading.CancellationToken"/> in the <paramref name="parallelOptions"/> has been disposed.</exception><exception cref="T:System.AggregateException">The exception that contains all the individual exceptions thrown on all threads.</exception>
        </member>
        <member name="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Generic.IEnumerable{``0},System.Action{``0})">
            <summary>Executes a foreach (For Each in Visual Basic) operation on an <see cref="T:System.Collections.IEnumerable"/> in which iterations may run in parallel.</summary><returns>A structure that contains information about which portion of the loop completed.</returns><param name="source">An enumerable data source.</param><param name="body">The delegate that is invoked once per iteration.</param><typeparam name="TSource">The type of the data in the source.</typeparam><exception cref="T:System.ArgumentNullException">The <paramref name="source"/> argument is null.-or-The <paramref name="body"/> argument is null.</exception><exception cref="T:System.AggregateException">The exception that contains all the individual exceptions thrown on all threads.</exception>
        </member>
        <member name="M:System.Threading.Tasks.Parallel.ForEach``1(System.Collections.Concurrent.Partitioner{``0},System.Threading.Tasks.ParallelOptions,System.Action{``0,System.Threading.Tasks.ParallelLoopState})">
            <summary>Executes a foreach (For Each in Visual Basic) operation on a <see cref="T:System.Collections.Concurrent.Partitioner"/> in which iterations may run in parallel, loop options can be configured, and the state of the loop can be monitored and manipulated.</summary><returns>A  structure that contains information about which portion of the loop completed.</returns><param name="source">The partitioner that contains the original data source.</param><param name="parallelOptions">An object that configures the behavior of this operation.</param><param name="body">The delegate that is invoked once per iteration.</param><typeparam name="TSource">The type of the elements in <paramref name="source"/>.</typeparam><exception cref="T:System.OperationCanceledException">The <see cref="T:System.Threading.CancellationToken"/> in the <paramref name="parallelOptions"/> argument is canceled.</exception><exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Threading.CancellationTokenSource"/> associated with the <see cref="T:System.Threading.CancellationToken"/> in the <paramref name="parallelOptions"/> has been disposed.</exception><exception cref="T:System.ArgumentNullException">The <paramref name="source"/> argument is null.-or-The <paramref name="parallelOptions"/> argument is null.-or-The <paramref name="body"/> argument is null.</exception><exception cref="T:System.InvalidOperationException">The <see cref="P:System.Collections.Concurrent.Partitioner`1.SupportsDynamicPartitions"/> property in the <paramref name="source"/> partitioner returns false.-or-The exception that is thrown when any methods in the <paramref name="source"/> partitioner return null.</exception>
        </member>
        <member name="T:System.Threading.Tasks.ParallelLoopResult">
            <summary>Provides completion status on the execution of a <see cref="T:System.Threading.Tasks.Parallel"/> loop.</summary>
        </member>
        <member name="P:System.Threading.Tasks.ParallelLoopResult.IsCompleted">
            <summary>Gets whether the loop ran to completion, such that all iterations of the loop were executed and the loop didn't receive a request to end prematurely.</summary><returns>true if the loop ran to completion; otherwise false;</returns>
        </member>
        <member name="P:System.Threading.Tasks.ParallelLoopResult.LowestBreakIteration">
            <summary>Gets the index of the lowest iteration from which <see cref="M:System.Threading.Tasks.ParallelLoopState.Break"/> was called.</summary><returns>Returns an integer that represents the lowest iteration from which the Break statement was called.</returns>
        </member>
        <member name="T:System.Threading.Tasks.ParallelLoopState">
            <summary>Enables iterations of <see cref="T:System.Threading.Tasks.Parallel"/> loops to interact with other iterations. An instance of this class is provided by the Parallel class to each loop; you can not create instances in your user code.</summary>
        </member>
        <member name="M:System.Threading.Tasks.ParallelLoopState.#ctor">
            <!-- No matching elements were found for the following include tag --><include file="../../_Doc/mscorlib.xml" path="doc/members/member[@name=&quot;M:System.Threading.Tasks.ParallelLoopState.#ctor&quot;]/*"/>
        </member>
        <member name="M:System.Threading.Tasks.ParallelLoopState.Stop">
            <summary>Communicates that the <see cref="T:System.Threading.Tasks.Parallel"/> loop should cease execution at the system's earliest convenience.</summary><exception cref="T:System.InvalidOperationException">The <see cref="M:System.Threading.Tasks.ParallelLoopState.Break"/> method was previously called. <see cref="M:System.Threading.Tasks.ParallelLoopState.Break"/> and <see cref="M:System.Threading.Tasks.ParallelLoopState.Stop"/> may not be used in combination by iterations of the same loop.</exception>
        </member>
        <member name="P:System.Threading.Tasks.ParallelLoopState.ShouldExitCurrentIteration">
            <summary>Gets whether the current iteration of the loop should exit based on requests made by this or other iterations.</summary><returns>true if the current iteration should exit; otherwise false.</returns>
        </member>
        <member name="T:System.Threading.Tasks.ParallelOptions">
            <summary>Stores options that configure the operation of methods on the <see cref="T:System.Threading.Tasks.Parallel"/> class.</summary>
        </member>
        <member name="M:System.Threading.Tasks.ParallelOptions.#ctor">
            <summary>Initializes a new instance of the <see cref="T:System.Threading.Tasks.ParallelOptions"/> class.</summary>
        </member>
        <member name="P:System.Threading.Tasks.ParallelOptions.MaxDegreeOfParallelism">
            <summary>Gets or sets the maximum degree of parallelism enabled by this ParallelOptions instance.</summary><returns>An integer that represents the maximum degree of parallelism.</returns><exception cref="T:System.ArgumentOutOfRangeException">The exception that is thrown when this <see cref="P:System.Threading.Tasks.ParallelOptions.MaxDegreeOfParallelism"/> is set to 0 or some value less than -1.</exception>
        </member>
        <member name="T:System.Timers.ElapsedEventArgs">
            <summary>Provides data for the <see cref="E:System.Timers.Timer.Elapsed"/> event.</summary>
        </member>
        <member name="T:System.Timers.ElapsedEventHandler">
            <summary>Represents the method that will handle the <see cref="E:System.Timers.Timer.Elapsed"/> event of a <see cref="T:System.Timers.Timer"/>.</summary><param name="sender">The source of the event. </param><param name="e">An <see cref="T:System.Timers.ElapsedEventArgs"/> object that contains the event data. </param>
        </member>
        <member name="T:System.Timers.Timer">
            <summary>Generates recurring events in an application.</summary>
        </member>
        <member name="M:System.Timers.Timer.Dispose">
            <summary>Releases all resources used by the <see cref="T:System.ComponentModel.Component"/>.</summary>
        </member>
        <member name="M:System.Timers.Timer.Start">
            <summary>Starts raising the <see cref="E:System.Timers.Timer.Elapsed"/> event by setting <see cref="P:System.Timers.Timer.Enabled"/> to true.</summary><exception cref="T:System.ArgumentOutOfRangeException">The <see cref="T:System.Timers.Timer"/> is created with an interval equal to or greater than <see cref="F:System.Int32.MaxValue"/> + 1, or set to an interval less than zero.</exception><PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode"/>
      </PermissionSet>
        </member>
        <member name="M:System.Timers.Timer.Stop">
            <summary>Stops raising the <see cref="E:System.Timers.Timer.Elapsed"/> event by setting <see cref="P:System.Timers.Timer.Enabled"/> to false.</summary><PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode"/>
      </PermissionSet>
        </member>
        <member name="E:System.Timers.Timer.Elapsed">
            <summary>Occurs when the interval elapses.</summary>
        </member>
        <member name="P:System.Timers.Timer.Enabled">
            <summary>Gets or sets a value indicating whether the <see cref="T:System.Timers.Timer"/> should raise the <see cref="E:System.Timers.Timer.Elapsed"/> event.</summary><returns>true if the <see cref="T:System.Timers.Timer"/> should raise the <see cref="E:System.Timers.Timer.Elapsed"/> event; otherwise, false. The default is false.</returns><exception cref="T:System.ObjectDisposedException">This property cannot be set because the timer has been disposed.</exception><exception cref="T:System.ArgumentException">The <see cref="P:System.Timers.Timer.Interval"/> property was set to a value greater than <see cref="F:System.Int32.MaxValue"/> before the timer was enabled. </exception>
        </member>
        <member name="P:System.Timers.Timer.Interval">
            <summary>Gets or sets the interval at which to raise the <see cref="E:System.Timers.Timer.Elapsed"/> event.</summary><returns>The time, in milliseconds, between <see cref="E:System.Timers.Timer.Elapsed"/> events. The value must be greater than zero, and less than or equal to <see cref="F:System.Int32.MaxValue"/>. The default is 100 milliseconds.</returns><exception cref="T:System.ArgumentException">The interval is less than or equal to zero.-or-The interval is greater than <see cref="F:System.Int32.MaxValue"/>, and the timer is currently enabled. (If the timer is not currently enabled, no exception is thrown until it becomes enabled.) </exception>
        </member>
        <member name="P:System.Timers.Timer.SynchronizingObject">
            <summary>Gets or sets the object used to marshal event-handler calls that are issued when an interval has elapsed.</summary><returns>The <see cref="T:System.ComponentModel.ISynchronizeInvoke"/> representing the object used to marshal the event-handler calls that are issued when an interval has elapsed. The default is null.</returns>
        </member>
        <member name="T:System.TypeExtensions">
            <summary>
            Shim complement for the <see cref="T:System.Type"/> class. <see cref="T:System.Type"/> instance methods that are not available in the 
            PCL profile are here provided as equivalent extension methods. <see cref="T:System.Type"/> instance properties that are not available
            in the PCL profile are here provided as extension methods without additional arguments (since extension properties are not supported in C#).
            </summary>
        </member>
        <member name="M:System.TypeExtensions.IsEnum(System.Type)">
            <summary>Gets a value indicating whether the current <see cref="T:System.Type"/> represents an enumeration.</summary><returns>true if the current <see cref="T:System.Type"/> represents an enumeration; otherwise, false.</returns><filterpriority>2</filterpriority>
        </member>
        <member name="M:System.TypeExtensions.IsValueType(System.Type)">
            <summary>Gets a value indicating whether the <see cref="T:System.Type"/> is a value type.</summary><returns>true if the <see cref="T:System.Type"/> is a value type; otherwise, false.</returns><filterpriority>2</filterpriority>
        </member>
        <member name="M:System.TypeExtensions.IsAssignableFrom(System.Type,System.Type)">
            <summary>Determines whether an instance of the current <see cref="T:System.Type"/> can be assigned from an instance of the specified Type.</summary><returns>true if <paramref name="c"/> and the current Type represent the same type, or if the current Type is in the inheritance hierarchy of <paramref name="c"/>, or if the current Type is an interface that <paramref name="c"/> implements, or if <paramref name="c"/> is a generic type parameter and the current Type represents one of the constraints of <paramref name="c"/>. false if none of these conditions are true, or if <paramref name="c"/> is null.</returns><param name="c">The type to compare with the current type. </param><filterpriority>2</filterpriority>
            <param name="type"><see cref="T:System.Type"/> object.</param>
        </member>
        <member name="M:System.TypeExtensions.IsSubclassOf(System.Type,System.Type)">
            <summary>Determines whether the class represented by the current <see cref="T:System.Type"/> derives from the class represented by the specified <see cref="T:System.Type"/>.</summary><returns>true if the Type represented by the <paramref name="c"/> parameter and the current Type represent classes, and the class represented by the current Type derives from the class represented by <paramref name="c"/>; otherwise, false. This method also returns false if <paramref name="c"/> and the current Type represent the same class.</returns><param name="c">The type to compare with the current type. </param><exception cref="T:System.ArgumentNullException">The <paramref name="c"/> parameter is null. </exception><filterpriority>2</filterpriority>
            <param name="type"><see cref="T:System.Type"/> object.</param>
        </member>
        <member name="M:System.TypeExtensions.IsInstanceOfType(System.Type,System.Object)">
            <summary>Determines whether the specified object is an instance of the current <see cref="T:System.Type"/>.</summary><returns>true if the current Type is in the inheritance hierarchy of the object represented by <paramref name="o"/>, or if the current Type is an interface that <paramref name="o"/> supports. false if neither of these conditions is the case, or if <paramref name="o"/> is null, or if the current Type is an open generic type (that is, <see cref="P:System.Type.ContainsGenericParameters"/> returns true).</returns><param name="o">The object to compare with the current type. </param><filterpriority>2</filterpriority>
            <param name="type"><see cref="T:System.Type"/> object.</param>
        </member>
        <member name="M:System.TypeExtensions.GetMethod(System.Type,System.String,System.Reflection.BindingFlags)">
            <summary>Searches for the specified method, using the specified binding constraints.</summary><returns>An object representing the method that matches the specified requirements, if found; otherwise, null.</returns><param name="name">The string containing the name of the method to get. </param><param name="bindingAttr">A bitmask comprised of one or more <see cref="T:System.Reflection.BindingFlags"/> that specify how the search is conducted.-or- Zero, to return null. </param><exception cref="T:System.Reflection.AmbiguousMatchException">More than one method is found with the specified name and matching the specified binding constraints. </exception><exception cref="T:System.ArgumentNullException">
        <paramref name="name"/> is null. </exception><filterpriority>2</filterpriority>
            <param name="type"><see cref="T:System.Type"/> object.</param>
        </member>
        <member name="M:System.TypeExtensions.GetFields(System.Type,System.Reflection.BindingFlags)">
            <summary>When overridden in a derived class, searches for the fields defined for the current <see cref="T:System.Type"/>, using the specified binding constraints.</summary><returns>An array of <see cref="T:System.Reflection.FieldInfo"/> objects representing all fields defined for the current <see cref="T:System.Type"/> that match the specified binding constraints.-or- An empty array of type <see cref="T:System.Reflection.FieldInfo"/>, if no fields are defined for the current <see cref="T:System.Type"/>, or if none of the defined fields match the binding constraints.</returns><param name="bindingAttr">A bitmask comprised of one or more <see cref="T:System.Reflection.BindingFlags"/> that specify how the search is conducted.-or- Zero, to return null. </param><filterpriority>2</filterpriority>
            <param name="type"><see cref="T:System.Type"/> object.</param>
        </member>
        <member name="M:System.TypeExtensions.InvokeMember(System.Type,System.String,System.Reflection.BindingFlags,System.Reflection.Binder,System.Object,System.Object[],System.Globalization.CultureInfo)">
            <summary>Invokes the specified member, using the specified binding constraints and matching the specified argument list and culture.</summary><returns>An object representing the return value of the invoked member.</returns><param name="name">The string containing the name of the constructor, method, property, or field member to invoke.-or- An empty string ("") to invoke the default member. -or-For IDispatch members, a string representing the DispID, for example "[DispID=3]".</param><param name="invokeAttr">A bitmask comprised of one or more <see cref="T:System.Reflection.BindingFlags"/> that specify how the search is conducted. The access can be one of the BindingFlags such as Public, NonPublic, Private, InvokeMethod, GetField, and so on. The type of lookup need not be specified. If the type of lookup is omitted, BindingFlags.Public | BindingFlags.Instance | BindingFlags.Static are used. </param><param name="binder">An object that defines a set of properties and enables binding, which can involve selection of an overloaded method, coercion of argument types, and invocation of a member through reflection.-or- A null reference (Nothing in Visual Basic), to use the <see cref="P:System.Type.DefaultBinder"/>. Note that explicitly defining a <see cref="T:System.Reflection.Binder"/> object may be required for successfully invoking method overloads with variable arguments.</param><param name="target">The object on which to invoke the specified member. </param><param name="args">An array containing the arguments to pass to the member to invoke. </param><param name="culture">The object representing the globalization locale to use, which may be necessary for locale-specific conversions, such as converting a numeric <see cref="T:System.String"/> to a <see cref="T:System.Double"/>.-or- A null reference (Nothing in Visual Basic) to use the current thread's <see cref="T:System.Globalization.CultureInfo"/>. </param><exception cref="T:System.ArgumentNullException">
        <paramref name="invokeAttr"/> does not contain CreateInstance and <paramref name="name"/> is null. </exception><exception cref="T:System.ArgumentException">
        <paramref name="invokeAttr"/> is not a valid <see cref="T:System.Reflection.BindingFlags"/> attribute. -or- <paramref name="invokeAttr"/> does not contain one of the following binding flags: InvokeMethod, CreateInstance, GetField, SetField, GetProperty, or SetProperty.-or- <paramref name="invokeAttr"/> contains CreateInstance combined with InvokeMethod, GetField, SetField, GetProperty, or SetProperty.-or- <paramref name="invokeAttr"/> contains both GetField and SetField.-or- <paramref name="invokeAttr"/> contains both GetProperty and SetProperty.-or- <paramref name="invokeAttr"/> contains InvokeMethod combined with SetField or SetProperty.-or- <paramref name="invokeAttr"/> contains SetField and <paramref name="args"/> has more than one element.-or- This method is called on a COM object and one of the following binding flags was not passed in: BindingFlags.InvokeMethod, BindingFlags.GetProperty, BindingFlags.SetProperty, BindingFlags.PutDispProperty, or BindingFlags.PutRefDispProperty.-or- One of the named parameter arrays contains a string that is null. </exception><exception cref="T:System.MethodAccessException">The specified member is a class initializer. </exception><exception cref="T:System.MissingFieldException">The field or property cannot be found. </exception><exception cref="T:System.MissingMethodException">No method can be found that matches the arguments in <paramref name="args"/>.-or- The current <see cref="T:System.Type"/> object represents a type that contains open type parameters, that is, <see cref="P:System.Type.ContainsGenericParameters"/> returns true. </exception><exception cref="T:System.Reflection.TargetException">The specified member cannot be invoked on <paramref name="target"/>. </exception><exception cref="T:System.Reflection.AmbiguousMatchException">More than one method matches the binding criteria. </exception><exception cref="T:System.InvalidOperationException">The method represented by <paramref name="name"/> has one or more unspecified generic type parameters. That is, the method's <see cref="P:System.Reflection.MethodInfo.ContainsGenericParameters"/> property returns true.</exception><filterpriority>2</filterpriority>
            <param name="type"><see cref="T:System.Type"/> object.</param>
        </member>
        <member name="T:System.Net.Security.RemoteCertificateValidationCallback">
            <summary>Verifies the remote Secure Sockets Layer (SSL) certificate used for authentication.</summary><returns>A <see cref="T:System.Boolean"/> value that determines whether the specified certificate is accepted for authentication.</returns><param name="sender">An object that contains state information for this validation.</param><param name="certificate">The certificate used to authenticate the remote party.</param><param name="chain">The chain of certificate authorities associated with the remote certificate.</param><param name="sslPolicyErrors">One or more errors associated with the remote certificate.</param>
        </member>
        <member name="T:System.Net.Security.SslStream">
            <summary>Provides a stream used for client-server communication that uses the Secure Socket Layer (SSL) security protocol to authenticate the server and optionally the client.</summary>
        </member>
        <member name="M:System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean,System.Net.Security.RemoteCertificateValidationCallback)">
            <summary>Initializes a new instance of the <see cref="T:System.Net.Security.SslStream"/> class using the specified <see cref="T:System.IO.Stream"/>, stream closure behavior and certificate validation delegate.</summary><param name="innerStream">A <see cref="T:System.IO.Stream"/> object used by the <see cref="T:System.Net.Security.SslStream"/> for sending and receiving data.</param><param name="leaveInnerStreamOpen">A Boolean value that indicates the closure behavior of the <see cref="T:System.IO.Stream"/> object used by the <see cref="T:System.Net.Security.SslStream"/> for sending and receiving data. This parameter indicates if the inner stream is left open.</param><param name="userCertificateValidationCallback">A <see cref="T:System.Net.Security.RemoteCertificateValidationCallback"/> delegate responsible for validating the certificate supplied by the remote party.</param><exception cref="T:System.ArgumentException">
        <paramref name="innerStream"/> is not readable.-or-<paramref name="innerStream"/> is not writable.</exception><exception cref="T:System.ArgumentNullException">
        <paramref name="innerStream"/> is null.-or-<paramref name="innerStream"/> is equal to <see cref="F:System.IO.Stream.Null"/>.</exception>
        </member>
        <member name="M:System.Net.Security.SslStream.#ctor(System.IO.Stream,System.Boolean)">
            <summary>Initializes a new instance of the <see cref="T:System.Net.Security.SslStream"/> class using the specified <see cref="T:System.IO.Stream"/> and stream closure behavior.</summary><param name="innerStream">A <see cref="T:System.IO.Stream"/> object used by the <see cref="T:System.Net.Security.SslStream"/> for sending and receiving data.</param><param name="leaveInnerStreamOpen">A Boolean value that indicates the closure behavior of the <see cref="T:System.IO.Stream"/> object used by the <see cref="T:System.Net.Security.SslStream"/> for sending and receiving data. This parameter indicates if the inner stream is left open.</param><exception cref="T:System.ArgumentException">
        <paramref name="innerStream"/> is not readable.-or-<paramref name="innerStream"/> is not writable.</exception><exception cref="T:System.ArgumentNullException">
        <paramref name="innerStream"/> is null.-or-<paramref name="innerStream"/> is equal to <see cref="F:System.IO.Stream.Null"/>.</exception>
        </member>
        <member name="M:System.Net.Security.SslStream.#ctor(System.IO.Stream)">
            <summary>Initializes a new instance of the <see cref="T:System.Net.Security.SslStream"/> class using the specified <see cref="T:System.IO.Stream"/>.</summary><param name="innerStream">A <see cref="T:System.IO.Stream"/> object used by the <see cref="T:System.Net.Security.SslStream"/> for sending and receiving data.</param><exception cref="T:System.ArgumentException">
        <paramref name="innerStream"/> is not readable.-or-<paramref name="innerStream"/> is not writable.</exception><exception cref="T:System.ArgumentNullException">
        <paramref name="innerStream"/> is null.-or-<paramref name="innerStream"/> is equal to <see cref="F:System.IO.Stream.Null"/>.</exception>
        </member>
        <member name="M:System.Net.Security.SslStream.AuthenticateAsServer(System.Security.Cryptography.X509Certificates.X509Certificate,System.Boolean,System.Security.Authentication.SslProtocols,System.Boolean)">
            <summary>Called by servers to begin an asynchronous operation to authenticate the server and optionally the client using the specified certificates, requirements and security protocol.</summary><param name="serverCertificate">The X509Certificate used to authenticate the server.</param><param name="clientCertificateRequired">A <see cref="T:System.Boolean"/> value that specifies whether the client must supply a certificate for authentication.</param><param name="enabledSslProtocols">The <see cref="T:System.Security.Authentication.SslProtocols"/>  value that represents the protocol used for authentication.</param><param name="checkCertificateRevocation">A <see cref="T:System.Boolean"/> value that specifies whether the certificate revocation list is checked during authentication.</param><exception cref="T:System.ArgumentNullException">
        <paramref name="serverCertificate"/> is null.</exception><exception cref="T:System.ArgumentException">
        <paramref name="enabledSslProtocols"/> is not a valid <see cref="T:System.Security.Authentication.SslProtocols"/> value.</exception><exception cref="T:System.Security.Authentication.AuthenticationException">The authentication failed and left this object in an unusable state.</exception><exception cref="T:System.InvalidOperationException">Authentication has already occurred.-or-Client authentication using this <see cref="T:System.Net.Security.SslStream"/> was tried previously.-or- Authentication is already in progress.</exception><exception cref="T:System.ObjectDisposedException">This object has been closed.</exception><exception cref="T:System.PlatformNotSupportedException">The <see cref="!:Overload:System.Net.Security.SslStream.AuthenticateAsServer"/> method is not supported on Windows 95, Windows 98, or Windows Millennium.</exception>
        </member>
        <member name="M:System.Net.Security.SslStream.AuthenticateAsClient(System.String)">
            <summary>Called by clients to authenticate the server and optionally the client in a client-server connection.</summary><param name="targetHost">The name of the server that shares this <see cref="T:System.Net.Security.SslStream"/>.</param><exception cref="T:System.ArgumentNullException">
        <paramref name="targetHost"/> is null.</exception><exception cref="T:System.Security.Authentication.AuthenticationException">The authentication failed and left this object in an unusable state.</exception><exception cref="T:System.InvalidOperationException">Authentication has already occurred.-or-Server authentication using this <see cref="T:System.Net.Security.SslStream"/> was tried previously.-or- Authentication is already in progress.</exception><exception cref="T:System.ObjectDisposedException">This object has been closed.</exception>
        </member>
        <member name="T:System.Net.Sockets.NetworkStream">
            <summary>Provides the underlying stream of data for network access.</summary>
        </member>
        <member name="M:System.Net.Sockets.NetworkStream.#ctor">
            <summary>
            Default constructor is private to avoid invalid initialization of the <see cref="T:System.Net.Sockets.NetworkStream"/> class.
            </summary>
        </member>
        <member name="M:System.Net.Sockets.NetworkStream.#ctor(Windows.Networking.Sockets.StreamSocket)">
            <summary>
            Initializes a network stream object.
            </summary>
            <param name="socket">Socket corresponding to the network stream.</param>
        </member>
        <member name="M:System.Net.Sockets.NetworkStream.UpgradeToSsl(System.String)">
            <summary>
            Attempt to upgrade stream to SSL.
            </summary>
            <param name="validationHost">Host subject to SSL upgrade.</param>
        </member>
        <member name="M:System.Net.Sockets.NetworkStream.Flush">
            <summary>Flushes data from the stream. This method is reserved for future use.</summary>
        </member>
        <member name="M:System.Net.Sockets.NetworkStream.Read(System.Byte[],System.Int32,System.Int32)">
            <summary>Reads data from the <see cref="T:System.Net.Sockets.NetworkStream"/>.</summary><returns>The number of bytes read from the <see cref="T:System.Net.Sockets.NetworkStream"/>.</returns><param name="buffer">An array of type <see cref="T:System.Byte"/> that is the location in memory to store data read from the <see cref="T:System.Net.Sockets.NetworkStream"/>. </param><param name="offset">The location in <paramref name="buffer"/> to begin storing the data to. </param><param name="size">The number of bytes to read from the <see cref="T:System.Net.Sockets.NetworkStream"/>. </param><exception cref="T:System.ArgumentNullException">The <paramref name="buffer"/> parameter is null. </exception><exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="offset"/> parameter is less than 0.-or- The <paramref name="offset"/> parameter is greater than the length of <paramref name="buffer"/>.-or- The <paramref name="size"/> parameter is less than 0.-or- The <paramref name="size"/> parameter is greater than the length of <paramref name="buffer"/> minus the value of the <paramref name="offset"/> parameter. -or-An error occurred when accessing the socket. See the Remarks section for more information.</exception><exception cref="T:System.IO.IOException">The underlying <see cref="T:System.Net.Sockets.Socket"/> is closed. </exception><exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.NetworkStream"/> is closed.-or- There is a failure reading from the network. </exception><PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true"/>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true"/>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence"/>
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true"/>
      </PermissionSet>
        </member>
        <member name="M:System.Net.Sockets.NetworkStream.Seek(System.Int64,System.IO.SeekOrigin)">
            <summary>Sets the current position of the stream to the given value. This method is not currently supported and always throws a <see cref="T:System.NotSupportedException"/>.</summary><returns>The position in the stream.</returns><param name="offset">This parameter is not used. </param><param name="origin">This parameter is not used. </param><exception cref="T:System.NotSupportedException">Any use of this property. </exception>
        </member>
        <member name="M:System.Net.Sockets.NetworkStream.SetLength(System.Int64)">
            <summary>Sets the length of the stream. This method always throws a <see cref="T:System.NotSupportedException"/>.</summary><param name="value">This parameter is not used. </param><exception cref="T:System.NotSupportedException">Any use of this property. </exception>
        </member>
        <member name="M:System.Net.Sockets.NetworkStream.Write(System.Byte[],System.Int32,System.Int32)">
            <summary>Writes data to the <see cref="T:System.Net.Sockets.NetworkStream"/>.</summary><param name="buffer">An array of type <see cref="T:System.Byte"/> that contains the data to write to the <see cref="T:System.Net.Sockets.NetworkStream"/>. </param><param name="offset">The location in <paramref name="buffer"/> from which to start writing data. </param><param name="size">The number of bytes to write to the <see cref="T:System.Net.Sockets.NetworkStream"/>. </param><exception cref="T:System.ArgumentNullException">The <paramref name="buffer"/> parameter is null. </exception><exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="offset"/> parameter is less than 0.-or- The <paramref name="offset"/> parameter is greater than the length of <paramref name="buffer"/>.-or- The <paramref name="size"/> parameter is less than 0.-or- The <paramref name="size"/> parameter is greater than the length of <paramref name="buffer"/> minus the value of the <paramref name="offset"/> parameter. </exception><exception cref="T:System.IO.IOException">There was a failure while writing to the network. -or-An error occurred when accessing the socket. See the Remarks section for more information.</exception><exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.NetworkStream"/> is closed.-or- There was a failure reading from the network. </exception><PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true"/>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true"/>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence"/>
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true"/>
      </PermissionSet>
        </member>
        <member name="M:System.Net.Sockets.NetworkStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
            <summary>Begins an asynchronous read from the <see cref="T:System.Net.Sockets.NetworkStream"/>.</summary><returns>An <see cref="T:System.IAsyncResult"/> that represents the asynchronous call.</returns><param name="buffer">An array of type <see cref="T:System.Byte"/> that is the location in memory to store data read from the <see cref="T:System.Net.Sockets.NetworkStream"/>. </param><param name="offset">The location in <paramref name="buffer"/> to begin storing the data. </param><param name="size">The number of bytes to read from the <see cref="T:System.Net.Sockets.NetworkStream"/>. </param><param name="callback">The <see cref="T:System.AsyncCallback"/> delegate that is executed when <see cref="M:System.Net.Sockets.NetworkStream.BeginRead(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)"/> completes. </param><param name="state">An object that contains any additional user-defined data. </param><exception cref="T:System.ArgumentNullException">The <paramref name="buffer"/> parameter is null. </exception><exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="offset"/> parameter is less than 0.-or- The <paramref name="offset"/> parameter is greater than the length of the <paramref name="buffer"/> paramater.-or- The <paramref name="size"/> is less than 0.-or- The <paramref name="size"/> is greater than the length of <paramref name="buffer"/> minus the value of the <paramref name="offset"/> parameter.</exception><exception cref="T:System.IO.IOException">The underlying <see cref="T:System.Net.Sockets.Socket"/> is closed.-or- There was a failure while reading from the network. -or-An error occurred when accessing the socket. See the Remarks section for more information.</exception><exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.NetworkStream"/> is closed. </exception><PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true"/>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true"/>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence"/>
      </PermissionSet>
        </member>
        <member name="M:System.Net.Sockets.NetworkStream.EndRead(System.IAsyncResult)">
            <summary>Handles the end of an asynchronous read.</summary><returns>The number of bytes read from the <see cref="T:System.Net.Sockets.NetworkStream"/>.</returns><param name="asyncResult">An <see cref="T:System.IAsyncResult"/> that represents an asynchronous call. </param><exception cref="T:System.ArgumentException">The <paramref name="asyncResult"/> parameter is null. </exception><exception cref="T:System.IO.IOException">The underlying <see cref="T:System.Net.Sockets.Socket"/> is closed.-or- An error occurred when accessing the socket. See the Remarks section for more information.</exception><exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.NetworkStream"/> is closed. </exception><PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true"/>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true"/>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence"/>
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true"/>
      </PermissionSet>
        </member>
        <member name="M:System.Net.Sockets.NetworkStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)">
            <summary>Begins an asynchronous write to a stream.</summary><returns>An <see cref="T:System.IAsyncResult"/> that represents the asynchronous call.</returns><param name="buffer">An array of type <see cref="T:System.Byte"/> that contains the data to write to the <see cref="T:System.Net.Sockets.NetworkStream"/>. </param><param name="offset">The location in <paramref name="buffer"/> to begin sending the data. </param><param name="size">The number of bytes to write to the <see cref="T:System.Net.Sockets.NetworkStream"/>. </param><param name="callback">The <see cref="T:System.AsyncCallback"/> delegate that is executed when <see cref="M:System.Net.Sockets.NetworkStream.BeginWrite(System.Byte[],System.Int32,System.Int32,System.AsyncCallback,System.Object)"/> completes. </param><param name="state">An object that contains any additional user-defined data. </param><exception cref="T:System.ArgumentNullException">The <paramref name="buffer"/> parameter is null. </exception><exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="offset"/> parameter is less than 0.-or- The <paramref name="offset"/> parameter is greater than the length of <paramref name="buffer"/>.-or- The <paramref name="size"/> parameter is less than 0.-or- The <paramref name="size"/> parameter is greater than the length of <paramref name="buffer"/> minus the value of the <paramref name="offset"/> parameter. </exception><exception cref="T:System.IO.IOException">The underlying <see cref="T:System.Net.Sockets.Socket"/> is closed.-or- There was a failure while writing to the network. -or-An error occurred when accessing the socket. See the Remarks section for more information.</exception><exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.NetworkStream"/> is closed. </exception><PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true"/>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true"/>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence"/>
      </PermissionSet>
        </member>
        <member name="M:System.Net.Sockets.NetworkStream.EndWrite(System.IAsyncResult)">
            <summary>Handles the end of an asynchronous write.</summary><param name="asyncResult">The <see cref="T:System.IAsyncResult"/> that represents the asynchronous call. </param><exception cref="T:System.ArgumentNullException">The <paramref name="asyncResult"/> parameter is null. </exception><exception cref="T:System.IO.IOException">The underlying <see cref="T:System.Net.Sockets.Socket"/> is closed.-or- An error occurred while writing to the network. -or-An error occurred when accessing the socket. See the Remarks section for more information.</exception><exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.NetworkStream"/> is closed. </exception><PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true"/>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true"/>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence"/>
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true"/>
      </PermissionSet>
        </member>
        <member name="M:System.Net.Sockets.NetworkStream.Dispose(System.Boolean)">
            <!-- No matching elements were found for the following include tag --><include file="../../../_Doc/System.xml" path="doc/members/member[@name=&quot;P:System.Net.Sockets.NetworkStream.Dispose(System.Boolean)&quot;]/*"/>
        </member>
        <member name="P:System.Net.Sockets.NetworkStream.CanRead">
            <summary>Gets a value that indicates whether the <see cref="T:System.Net.Sockets.NetworkStream"/> supports reading.</summary><returns>true if data can be read from the stream; otherwise, false. The default value is true.</returns>
        </member>
        <member name="P:System.Net.Sockets.NetworkStream.CanSeek">
            <summary>Gets a value that indicates whether the stream supports seeking. This property is not currently supported.This property always returns false.</summary><returns>false in all cases to indicate that <see cref="T:System.Net.Sockets.NetworkStream"/> cannot seek a specific location in the stream.</returns>
        </member>
        <member name="P:System.Net.Sockets.NetworkStream.CanWrite">
            <summary>Gets a value that indicates whether the <see cref="T:System.Net.Sockets.NetworkStream"/> supports writing.</summary><returns>true if data can be written to the <see cref="T:System.Net.Sockets.NetworkStream"/>; otherwise, false. The default value is true.</returns>
        </member>
        <member name="P:System.Net.Sockets.NetworkStream.Length">
            <summary>Gets the length of the data available on the stream. This property is not currently supported and always throws a <see cref="T:System.NotSupportedException"/>.</summary><returns>The length of the data available on the stream.</returns><exception cref="T:System.NotSupportedException">Any use of this property. </exception><PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence"/>
      </PermissionSet>
        </member>
        <member name="P:System.Net.Sockets.NetworkStream.Position">
            <summary>Gets or sets the current position in the stream. This property is not currently supported and always throws a <see cref="T:System.NotSupportedException"/>.</summary><returns>The current position in the stream.</returns><exception cref="T:System.NotSupportedException">Any use of this property. </exception><PermissionSet>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence"/>
      </PermissionSet>
        </member>
        <member name="T:System.Net.Sockets.TcpClient">
            <summary>Provides client connections for TCP network services.</summary>
        </member>
        <member name="M:System.Net.Sockets.TcpClient.#ctor(System.String,System.Int32)">
            <summary>Initializes a new instance of the <see cref="T:System.Net.Sockets.TcpClient"/> class and connects to the specified port on the specified host.</summary><param name="hostname">The DNS name of the remote host to which you intend to connect. </param><param name="port">The port number of the remote host to which you intend to connect. </param><exception cref="T:System.ArgumentNullException">The <paramref name="hostname"/> parameter is null. </exception><exception cref="T:System.ArgumentOutOfRangeException">The <paramref name="port"/> parameter is not between <see cref="F:System.Net.IPEndPoint.MinPort"/> and <see cref="F:System.Net.IPEndPoint.MaxPort"/>. </exception><exception cref="T:System.Net.Sockets.SocketException">An error occurred when accessing the socket. See the Remarks section for more information. </exception>
        </member>
        <member name="M:System.Net.Sockets.TcpClient.#ctor(Windows.Networking.Sockets.StreamSocket)">
            <summary>
            Initializes a TCP client for an existing <paramref name="socket"/>.
            </summary>
            <param name="socket">Socket on which the TCP client should be based.</param>
        </member>
        <member name="M:System.Net.Sockets.TcpClient.GetStream">
            <summary>Returns the <see cref="T:System.Net.Sockets.NetworkStream"/> used to send and receive data.</summary><returns>The underlying <see cref="T:System.Net.Sockets.NetworkStream"/>.</returns><exception cref="T:System.InvalidOperationException">The <see cref="T:System.Net.Sockets.TcpClient"/> is not connected to a remote host. </exception><exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.TcpClient"/> has been closed. </exception><PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true"/>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true"/>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence"/>
      </PermissionSet>
        </member>
        <member name="M:System.Net.Sockets.TcpClient.Close">
            <summary>Disposes this <see cref="T:System.Net.Sockets.TcpClient"/> instance and requests that the underlying TCP connection be closed.</summary><PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true"/>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true"/>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence"/>
      </PermissionSet>
        </member>
        <member name="P:System.Net.Sockets.TcpClient.NoDelay">
            <summary>Gets or sets a value that disables a delay when send or receive buffers are not full.</summary><returns>true if the delay is disabled, otherwise false. The default value is false.</returns><PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true"/>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true"/>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true"/>
      </PermissionSet>
        </member>
        <member name="T:System.Net.Sockets.TcpListener">
            <summary>Listens for connections from TCP network clients.</summary>
        </member>
        <member name="M:System.Net.Sockets.TcpListener.#ctor(System.Net.IPAddress,System.Int32)">
            <summary>Initializes a new instance of the <see cref="T:System.Net.Sockets.TcpListener"/> class that listens for incoming connection attempts on the specified local IP address and port number.</summary><param name="localaddr">An <see cref="T:System.Net.IPAddress"/> that represents the local IP address. </param><param name="port">The port on which to listen for incoming connection attempts. </param><exception cref="T:System.ArgumentNullException">
        <paramref name="localaddr"/> is null. </exception><exception cref="T:System.ArgumentOutOfRangeException">
        <paramref name="port"/> is not between <see cref="F:System.Net.IPEndPoint.MinPort"/> and <see cref="F:System.Net.IPEndPoint.MaxPort"/>. </exception>
        </member>
        <member name="M:System.Net.Sockets.TcpListener.Start">
            <summary>Starts listening for incoming connection requests.</summary><exception cref="T:System.Net.Sockets.SocketException">Use the <see cref="P:System.Net.Sockets.SocketException.ErrorCode"/> property to obtain the specific error code. When you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error. </exception><PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true"/>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true"/>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true"/>
        <IPermission class="System.Net.SocketPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true"/>
      </PermissionSet>
        </member>
        <member name="M:System.Net.Sockets.TcpListener.BeginAcceptTcpClient(System.AsyncCallback,System.Object)">
            <summary>Begins an asynchronous operation to accept an incoming connection attempt.</summary><returns>An <see cref="T:System.IAsyncResult"/> that references the asynchronous creation of the <see cref="T:System.Net.Sockets.TcpClient"/>.</returns><param name="callback">An <see cref="T:System.AsyncCallback"/> delegate that references the method to invoke when the operation is complete.</param><param name="state">A user-defined object containing information about the accept operation. This object is passed to the <paramref name="callback"/> delegate when the operation is complete.</param><exception cref="T:System.Net.Sockets.SocketException">An error occurred while attempting to access the socket. See the Remarks section for more information. </exception><exception cref="T:System.ObjectDisposedException">The <see cref="T:System.Net.Sockets.Socket"/> has been closed. </exception><PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true"/>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true"/>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence"/>
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true"/>
      </PermissionSet>
        </member>
        <member name="M:System.Net.Sockets.TcpListener.EndAcceptTcpClient(System.IAsyncResult)">
            <summary>Asynchronously accepts an incoming connection attempt and creates a new <see cref="T:System.Net.Sockets.TcpClient"/> to handle remote host communication.</summary><returns>A <see cref="T:System.Net.Sockets.TcpClient"/>.</returns><param name="asyncResult">An <see cref="T:System.IAsyncResult"/> returned by a call to the <see cref="M:System.Net.Sockets.TcpListener.BeginAcceptTcpClient(System.AsyncCallback,System.Object)"/> method.</param><PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true"/>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true"/>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode, ControlEvidence"/>
        <IPermission class="System.Diagnostics.PerformanceCounterPermission, System, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true"/>
      </PermissionSet>
        </member>
        <member name="M:System.Net.Sockets.TcpListener.Stop">
            <summary>Closes the listener.</summary><exception cref="T:System.Net.Sockets.SocketException">Use the <see cref="P:System.Net.Sockets.SocketException.ErrorCode"/> property to obtain the specific error code. When you have obtained this code, you can refer to the Windows Sockets version 2 API error code documentation in MSDN for a detailed description of the error. </exception><PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true"/>
        <IPermission class="System.Security.Permissions.FileIOPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true"/>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Unrestricted="true"/>
      </PermissionSet>
        </member>
        <member name="M:System.Net.Sockets.TcpListener.OnConnectionReceived(Windows.Networking.Sockets.StreamSocketListener,Windows.Networking.Sockets.StreamSocketListenerConnectionReceivedEventArgs)">
            <summary>
            Event handler when connection is established.
            </summary>
            <param name="sender">Listener object.</param>
            <param name="args">Connection received event arguments.</param>
        </member>
        <member name="T:System.ShimEnvironment">
            <summary>
            Shim complement for the <see cref="T:System.Environment"/> class, providing members that are
            not included in the PCL member subset of the <see cref="T:System.Environment"/> class.
            </summary>
        </member>
        <member name="P:System.ShimEnvironment.MachineName">
             <summary>Gets the NetBIOS name of this local computer.</summary><returns>A string containing the name of this computer.</returns><exception cref="T:System.InvalidOperationException">The name of this computer cannot be obtained.</exception><filterpriority>1</filterpriority><PermissionSet>
        <IPermission class="System.Security.Permissions.EnvironmentPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Read="COMPUTERNAME"/>
        <IPermission class="System.Security.Permissions.SecurityPermission, mscorlib, Version=2.0.3600.0, Culture=neutral, PublicKeyToken=b77a5c561934e089" version="1" Flags="UnmanagedCode"/>
      </PermissionSet>
            <remarks>
             Want to store the hostname to send for push notifications to make
             the management UI better. Take the substring up to the first period
             of the first DomainName entry.
             Thanks to Jeff Wilcox and Matthijs Hoekstra
             Adapted from Q42.WinRT library at https://github.com/Q42/Q42.WinRT
            </remarks>
        </member>
    </members>
</doc>
